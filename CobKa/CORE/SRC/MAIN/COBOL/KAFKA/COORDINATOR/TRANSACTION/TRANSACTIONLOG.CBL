IDENTIFICATION DIVISION.
PROGRAM-ID. TRANSACTION-LOG.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "kafka/coordinator/transaction/TransactionLogValue.cpy".
    COPY "kafka/coordinator/transaction/TransactionLogKey.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-TRANSACTION-LOG-VALUE.
    COPY "kafka/coordinator/transaction/TransactionLogValue.cpy".
01 WS-TRANSACTION-LOG-KEY.
    COPY "kafka/coordinator/transaction/TransactionLogKey.cpy".
01 WS-BASE-KEY.
    05 WS-BASE-KEY-VERSION PIC S9(4) COMP.
    05 WS-BASE-KEY-TRANSACTIONAL-ID PIC X(256).
01 WS-TXN-KEY.
    05 WS-TXN-KEY-VERSION PIC S9(4) COMP.
    05 WS-TXN-KEY-TRANSACTIONAL-ID PIC X(256).
01 WS-UNKNOWN-KEY.
    05 WS-UNKNOWN-KEY-VERSION PIC S9(4) COMP.
01 WS-TXN-METADATA.
    05 WS-TXN-METADATA-TRANSACTIONAL-ID PIC X(256).
    05 WS-TXN-METADATA-PRODUCER-ID PIC 9(18) COMP.
    05 WS-TXN-METADATA-PRODUCER-EPOCH PIC 9(4) COMP.
    05 WS-TXN-METADATA-TRANSACTION-TIMEOUT-MS PIC 9(9) COMP.
    05 WS-TXN-METADATA-TRANSACTION-STATUS PIC 9(2) COMP.
    05 WS-TXN-METADATA-TRANSACTION-LAST-UPDATE-TS PIC 9(18) COMP.
    05 WS-TXN-METADATA-TRANSACTION-START-TS PIC 9(18) COMP.
    05 WS-TXN-METADATA-TRANSACTION-PARTITIONS.
        10 WS-TXN-METADATA-TRANSACTION-PARTITIONS-TOPIC PIC X(256).
        10 WS-TXN-METADATA-TRANSACTION-PARTITIONS-PARTITION-IDS PIC 9(9) COMP OCCURS 1 TO 32767 TIMES DEPENDING ON WS-TXN-METADATA-TRANSACTION-PARTITIONS-TOPIC-PARTITION-COUNT.
        10 WS-TXN-METADATA-TRANSACTION-PARTITIONS-TOPIC-PARTITION-COUNT PIC 9(5) COMP.
    05 WS-TXN-METADATA-CLIENT-TRANSACTION-VERSION PIC 9(2) COMP.

PROCEDURE DIVISION.

IDENTIFICATION DIVISION.
PROGRAM-ID. TRANSACTION-LOG.

PROCEDURE DIVISION.

ENTRY-POINT.

*> Generate transaction log message key
    MOVE FUNCTION LENGTH(WS-TXN-KEY-TRANSACTIONAL-ID) TO WS-TXN-KEY-VERSION.
    CALL "MessageUtil.toCoordinatorTypePrefixedBytes" USING WS-TXN-KEY RETURNING LENGTH OF WS-TXN-KEY-TRANSACTIONAL-ID.

*> Generate transaction log message value
    MOVE FUNCTION LENGTH(WS-TXN-METADATA-TRANSACTION-PARTITIONS) TO WS-TXN-METADATA-TRANSACTION-PARTITIONS-TOPIC-PARTITION-COUNT.
    CALL "MessageUtil.toVersionPrefixedBytes" USING WS-TRANSACTION-LOG-VALUE RETURNING LENGTH OF WS-TRANSACTION-LOG-VALUE.

*> Decode transaction log message key
    MOVE FUNCTION LENGTH(WS-BASE-KEY-TRANSACTIONAL-ID) TO WS-BASE-KEY-VERSION.
    IF WS-BASE-KEY-VERSION = CoordinatorRecordType.TRANSACTION_LOG
        MOVE WS-TXN-KEY-TRANSACTIONAL-ID TO WS-BASE-KEY-TRANSACTIONAL-ID
    ELSE
        MOVE WS-UNKNOWN-KEY-VERSION TO WS-BASE-KEY-VERSION.

*> Decode transaction log message value
    IF WS-TRANSACTION-LOG-VALUE IS NULL
        MOVE SPACE TO WS-TXN-METADATA-TRANSACTIONAL-ID
    ELSE
        MOVE WS-TRANSACTION-LOG-VALUE-PRODUCER-ID TO WS-TXN-METADATA-PRODUCER-ID
        MOVE WS-TRANSACTION-LOG-VALUE-PRODUCER-EPOCH TO WS-TXN-METADATA-PRODUCER-EPOCH
        MOVE WS-TRANSACTION-LOG-VALUE-TRANSACTION-TIMEOUT-MS TO WS-TXN-METADATA-TRANSACTION-TIMEOUT-MS
        MOVE WS-TRANSACTION-LOG-VALUE-TRANSACTION-STATUS TO WS-TXN-METADATA-TRANSACTION-STATUS
        MOVE WS-TRANSACTION-LOG-VALUE-TRANSACTION-LAST-UPDATE-TS TO WS-TXN-METADATA-TRANSACTION-LAST-UPDATE-TS
        MOVE WS-TRANSACTION-LOG-VALUE-TRANSACTION-START-TS TO WS-TXN-METADATA-TRANSACTION-START-TS
        MOVE WS-TRANSACTION-LOG-VALUE-TRANSACTION-PARTITIONS TO WS-TXN-METADATA-TRANSACTION-PARTITIONS
        MOVE WS-TRANSACTION-LOG-VALUE-CLIENT-TRANSACTION-VERSION TO WS-TXN-METADATA-CLIENT-TRANSACTION-VERSION.

STOP RUN.