IDENTIFICATION DIVISION.
PROGRAM-ID. TRANSACTION-MARKER-REQUEST-COMPLETION-HANDLER.
AUTHOR. COBOL PROGRAMMING EXPERT.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    FUNCTION ALL INTRINSIC.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-BROKER-ID            PIC 9(9).
01 WS-TXN-STATE-MANAGER    POINTER.
01 WS-TXN-MARKER-CHANNEL-MANAGER POINTER.
01 WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES POINTER.

01 WS-REQUEST-HEADER.
    05 WS-CORRELATION-ID PIC 9(9).

01 WS-ERRORS-BY-PRODUCER-ID POINTER.
01 WS-TXN-METADATA POINTER.
01 WS-RETRY-PARTITIONS POINTER.
01 WS-ABORT-SENDING PIC X(1) VALUE 'N'.

LINKAGE SECTION.
01 LNK-RESPONSE POINTER.

PROCEDURE DIVISION.
    MOVE FUNCTION PARAMETER-VALUE(1) TO WS-BROKER-ID.
    MOVE FUNCTION PARAMETER-VALUE(2) TO WS-TXN-STATE-MANAGER.
    MOVE FUNCTION PARAMETER-VALUE(3) TO WS-TXN-MARKER-CHANNEL-MANAGER.
    MOVE FUNCTION PARAMETER-VALUE(4) TO WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES.

    SET ADDRESS OF LNK-RESPONSE TO LNK-RESPONSE.

    IF LNK-RESPONSE->WAS-DISCONNECTED THEN
        PERFORM HANDLE-DISCONNECTED-REQUEST
    ELSE
        PERFORM HANDLE-COMPLETED-REQUEST.

    GOBACK.

HANDLE-DISCONNECTED-REQUEST.
    PERFORM VARYING WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX FROM 1 BY 1
        UNTIL WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX > WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-COUNT
        MOVE WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-ENTRY(WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX)
            TO WS-PENDING-COMPLETE-TXN
        MOVE WS-PENDING-COMPLETE-TXN->TRANSACTIONAL-ID TO WS-TRANSACTIONAL-ID
        MOVE WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-ENTRY(WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX)
            TO WS-TXN-MARKER
        PERFORM HANDLE-DISCONNECTED-REQUEST-FOR-TXN
    END-PERFORM.

HANDLE-DISCONNECTED-REQUEST-FOR-TXN.
    CALL "GET-TRANSACTION-STATE" USING WS-TRANSACTIONAL-ID
        RETURNING WS-ERROR-CODE, WS-EPOCH-AND-METADATA.
    EVALUATE WS-ERROR-CODE
        WHEN ERRORS-NOT-COORDINATOR
            DISPLAY "I am no longer the coordinator for " WS-TRANSACTIONAL-ID "; cancel sending transaction markers " WS-TXN-MARKER " to the brokers"
            CALL "REMOVE-MARKERS-FOR-TXN" USING WS-PENDING-COMPLETE-TXN
        WHEN ERRORS-COORDINATOR-LOAD-IN-PROGRESS
            DISPLAY "I am loading the transaction partition that contains " WS-TRANSACTIONAL-ID " which means the current markers have to be obsoleted; cancel sending transaction markers " WS-TXN-MARKER " to the brokers"
            CALL "REMOVE-MARKERS-FOR-TXN" USING WS-PENDING-COMPLETE-TXN
        WHEN OTHER
            DISPLAY "Unhandled error " WS-ERROR-CODE " when fetching current transaction state"
            MOVE ABEND-REQUESTED TO TRUE
        WHEN NONE
            DISPLAY "The coordinator still owns the transaction partition for " WS-TRANSACTIONAL-ID ", but there is no metadata in the cache; this is not expected"
            MOVE ABEND-REQUESTED TO TRUE
        WHEN SOME
            IF WS-EPOCH-AND-METADATA->COORDINATOR-EPOCH NOT = WS-TXN-MARKER->COORDINATOR-EPOCH THEN
                DISPLAY "Transaction coordinator epoch for " WS-TRANSACTIONAL-ID " has changed from " WS-TXN-MARKER->COORDINATOR-EPOCH " to " WS-EPOCH-AND-METADATA->COORDINATOR-EPOCH "; cancel sending transaction markers " WS-TXN-MARKER " to the brokers"
                CALL "REMOVE-MARKERS-FOR-TXN" USING WS-PENDING-COMPLETE-TXN
            ELSE
                DISPLAY "Re-enqueuing " WS-TXN-MARKER->TRANSACTION-RESULT " transaction markers for transactional id " WS-TRANSACTIONAL-ID " under coordinator epoch " WS-TXN-MARKER->COORDINATOR-EPOCH
                CALL "ADD-TXN-MARKERS-TO-BROKER-QUEUE" USING WS-TXN-MARKER->PRODUCER-ID,
                                                         WS-TXN-MARKER->PRODUCER-EPOCH,
                                                         WS-TXN-MARKER->TRANSACTION-RESULT,
                                                         WS-PENDING-COMPLETE-TXN,
                                                         WS-TXN-MARKER->PARTITIONS
            END-IF
    END-EVALUATE.

HANDLE-COMPLETED-REQUEST.
    MOVE LNK-RESPONSE->REQUEST-HEADER->CORRELATION-ID TO WS-CORRELATION-ID.
    MOVE LNK-RESPONSE->RESPONSE-BODY TO WS-WRITE-TXN-MARKER-RESPONSE.

    PERFORM VARYING WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX FROM 1 BY 1
        UNTIL WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX > WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-COUNT
        MOVE WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-ENTRY(WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX)
            TO WS-PENDING-COMPLETE-TXN
        MOVE WS-PENDING-COMPLETE-TXN->TRANSACTIONAL-ID TO WS-TRANSACTIONAL-ID
        MOVE WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-ENTRY(WS-PENDING-COMPLETE-TXN-AND-MARKER-ENTRIES-IDX)
            TO WS-TXN-MARKER
        PERFORM HANDLE-COMPLETED-REQUEST-FOR-TXN
    END-PERFORM.

HANDLE-COMPLETED-REQUEST-FOR-TXN.
    CALL "GET-TRANSACTION-STATE" USING WS-TRANSACTIONAL-ID
        RETURNING WS-ERROR-CODE, WS-EPOCH-AND-METADATA.
    EVALUATE WS-ERROR-CODE
        WHEN ERRORS-NOT-COORDINATOR
            DISPLAY "I am no longer the coordinator for " WS-TRANSACTIONAL-ID "; cancel sending transaction markers " WS-TXN-MARKER " to the brokers"
            CALL "REMOVE-MARKERS-FOR-TXN" USING WS-PENDING-COMPLETE-TXN
        WHEN ERRORS-COORDINATOR-LOAD-IN-PROGRESS
            DISPLAY "I am loading the transaction partition that contains " WS-TRANSACTIONAL-ID " which means the current markers have to be obsoleted; cancel sending transaction markers " WS-TXN-MARKER " to the brokers"
            CALL "REMOVE-MARKERS-FOR-TXN" USING WS-PENDING-COMPLETE-TXN
        WHEN OTHER
            DISPLAY "Unhandled error " WS-ERROR-CODE " when fetching current transaction state"
            MOVE ABEND-REQUESTED TO TRUE
        WHEN NONE
            DISPLAY "The coordinator still owns the transaction partition for " WS-TRANSACTIONAL-ID ", but there is no metadata in the cache; this is not expected"
            MOVE ABEND-REQUESTED TO TRUE
        WHEN SOME
            MOVE WS-EPOCH-AND-METADATA->TRANSACTION-METADATA TO WS-TXN-METADATA
            INITIALIZE WS-RETRY-PARTITIONS
            MOVE 'N' TO WS-ABORT-SENDING
            PERFORM HANDLE-ERRORS-FOR-TXN-MARKER
            IF WS-ABORT-SENDING = 'N' THEN
                IF WS-RETRY-PARTITIONS IS NOT EMPTY THEN
                    DISPLAY "Re-enqueuing " WS-TXN-MARKER->TRANSACTION-RESULT " transaction markers for transactional id " WS-TRANSACTIONAL-ID " under coordinator epoch " WS-TXN-MARKER->COORDINATOR-EPOCH
                    CALL "ADD-TXN-MARKERS-TO-BROKER-QUEUE" USING WS-TXN-MARKER->PRODUCER-ID,
                                                             WS-TXN-MARKER->PRODUCER-EPOCH,
                                                             WS-TXN-MARKER->TRANSACTION-RESULT,
                                                             WS-PENDING-COMPLETE-TXN,
                                                             WS-RETRY-PARTITIONS
                ELSE
                    CALL "MAYBE-WRITE-TXN-COMPLETION" USING WS-TRANSACTIONAL-ID
                END-IF
            END-IF
    END-EVALUATE.

HANDLE-ERRORS-FOR-TXN-MARKER.
    MOVE WS-WRITE-TXN-MARKER-RESPONSE->ERRORS-BY-PRODUCER-ID TO WS-ERRORS-BY-PRODUCER-ID.
    WS-TXN-METADATA->TXN-METADATA-LOCK.
    PERFORM VARYING WS-ERRORS-BY-PRODUCER-ID-IDX FROM 1 BY 1
        UNTIL WS-ERRORS-BY-PRODUCER-ID-IDX > WS-ERRORS-BY-PRODUCER-ID-COUNT
        MOVE WS-ERRORS-BY-PRODUCER-ID-ENTRY(WS-ERRORS-BY-PRODUCER-ID-IDX)
            TO WS-TOPIC-PARTITION, WS-ERROR-CODE
        EVALUATE WS-ERROR-CODE
            WHEN ERRORS-NONE
                CALL "REMOVE-PARTITION" USING WS-TOPIC-PARTITION, WS-TXN-METADATA
            WHEN ERRORS-CORRUPT-MESSAGE,
                 ERRORS-MESSAGE-TOO-LARGE,
                 ERRORS-RECORD-LIST-TOO-LARGE,
                 ERRORS-INVALID-REQUIRED-ACKS
                DISPLAY "Received fatal error " WS-ERROR-CODE " while sending txn marker for " WS-TRANSACTIONAL-ID
                MOVE ABEND-REQUESTED TO TRUE
            WHEN ERRORS-UNKNOWN-TOPIC-OR-PARTITION,
                 ERRORS-NOT-LEADER-OR-FOLLOWER,
                 ERRORS-NOT-ENOUGH-REPLICAS,
                 ERRORS-NOT-ENOUGH-REPLICAS-AFTER-APPEND,
                 ERRORS-REQUEST-TIMED-OUT,
                 ERRORS-KAFKA-STORAGE-ERROR
                DISPLAY "Sending " WS-TRANSACTIONAL-ID "'s transaction marker for partition " WS-TOPIC-PARTITION " has failed with error " WS-ERROR-CODE ", retrying with current coordinator epoch " WS-EPOCH-AND-METADATA->COORDINATOR-EPOCH
                MOVE WS-TOPIC-PARTITION TO WS-RETRY-PARTITIONS-ENTRY(WS-RETRY-PARTITIONS-COUNT)
                ADD 1 TO WS-RETRY-PARTITIONS-COUNT
            WHEN ERRORS-INVALID-PRODUCER-EPOCH,
                 ERRORS-TRANSACTION-COORDINATOR-FENCED
                DISPLAY "Sending " WS-TRANSACTIONAL-ID "'s transaction marker for partition " WS-TOPIC-PARTITION " has permanently failed with error " WS-ERROR-CODE " with the current coordinator epoch " WS-EPOCH-AND-METADATA->COORDINATOR-EPOCH "; cancel sending any more transaction markers " WS-TXN-MARKER " to the brokers"
                CALL "REMOVE-MARKERS-FOR-TXN" USING WS-PENDING-COMPLETE-TXN
                MOVE 'Y' TO WS-ABORT-SENDING
            WHEN ERRORS-UNSUPPORTED-FOR-MESSAGE-FORMAT,
                 ERRORS-UNSUPPORTED-VERSION
                DISPLAY "Sending " WS-TRANSACTIONAL-ID "'s transaction marker from partition " WS-TOPIC-PARTITION " has failed with " WS-ERROR-CODE ". This partition will be removed from the set of partitions waiting for completion"
                CALL "REMOVE-PARTITION" USING WS-TOPIC-PARTITION, WS-TXN-METADATA
            WHEN OTHER
                DISPLAY "Unexpected error " WS-ERROR-CODE " while sending txn marker for " WS-TRANSACTIONAL-ID
                MOVE ABEND-REQUESTED TO TRUE
        END-EVALUATE
    END-PERFORM.
    WS-TXN-METADATA->TXN-METADATA-UNLOCK.