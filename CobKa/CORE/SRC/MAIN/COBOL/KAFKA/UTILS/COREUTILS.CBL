IDENTIFICATION DIVISION.
PROGRAM-ID. CORE-UTILS.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    CLASS JAVAMANAGEMENTFACTORY IS "java.lang.management.ManagementFactory".
    CLASS INETADDRESSVALIDATOR IS "org.apache.commons.validator.routines.InetAddressValidator".
    CLASS OBJECTNAME IS "javax.management.ObjectName".
    CLASS UTILS IS "org.apache.kafka.common.utils.Utils".
    CLASS UUID IS "java.util.UUID".
    CLASS BASE64 IS "java.util.Base64".
    CLASS PROPERTIES IS "java.util.Properties".
    CLASS COLLECTIONCONVERTERS IS "scala.jdk.CollectionConverters".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 LOGGER PIC X(30) VALUE "CoreUtils".
01 INET-ADDRESS-VALIDATOR PIC X(30) VALUE SPACE.
01 MBEAN-OBJECT-NAME PIC X(50) VALUE SPACE.
01 CLASS-NAME PIC X(50) VALUE SPACE.
01 CONSTRUCTOR-ARGS PIC X(100) VALUE SPACE.
01 LOCK PIC X(10) VALUE SPACE.
01 FUNCTION-RESULT PIC X(10) VALUE SPACE.
01 DUPLICATES-LIST PIC X(100) VALUE SPACE.
01 ENDPOINTS PIC X(100) VALUE SPACE.
01 DISTINCT-LISTENER-NAMES PIC X(100) VALUE SPACE.
01 DUPLICATE-PORTS PIC X(100) VALUE SPACE.
01 DUPLICATE-PORTS-PARTITIONED PIC X(100) VALUE SPACE.
01 DUPLICATE-PORTS-WITH-IP-HOSTS PIC X(100) VALUE SPACE.
01 DUPLICATE-PORTS-WITHOUT-IP-HOSTS PIC X(100) VALUE SPACE.
01 UUID-BYTES PIC X(16) VALUE SPACE.
01 PROPERTIES-LIST PIC X(100) VALUE SPACE.
01 REPLICA-TO-BROKER-ASSIGNMENT PIC X(100) VALUE SPACE.

PROCEDURE DIVISION.

SWALLOW.
    PERFORM
        INVOKE CLASS "scala.util.control.Exception" METHOD "allCatch" RETURNING FUNCTION-RESULT
        CALL FUNCTION-RESULT USING ACTION LOGGING LOGLEVEL
    END-PERFORM.

DELETE.
    PERFORM VARYING FILE-ID FROM 1 BY 1 UNTIL FILE-ID > FILES-COUNT
        INVOKE CLASS UTILS METHOD "delete" USING FILE-ID
    END-PERFORM.

REGISTER-MBEAN.
    INVOKE CLASS JAVAMANAGEMENTFACTORY METHOD "getPlatformMBeanServer" RETURNING MBEAN-OBJECT-NAME
    PERFORM
        LOCK MBEAN-OBJECT-NAME
        INVOKE CLASS OBJECTNAME CONSTRUCTOR USING NAME RETURNING MBEAN-OBJECT-NAME
        IF MBEAN-OBJECT-NAME IS REGISTERED
            INVOKE MBEAN-OBJECT-NAME METHOD "unregisterMBean" USING MBEAN-OBJECT-NAME
        END-IF
        INVOKE MBEAN-OBJECT-NAME METHOD "registerMBean" USING MBEAN MBEAN-OBJECT-NAME
        MOVE TRUE TO FUNCTION-RESULT
    EXCEPTION
        WHEN OTHER
            INVOKE LOGGER METHOD "error" USING "Failed to register Mbean {}" NAME
            MOVE FALSE TO FUNCTION-RESULT
    END-PERFORM.

CREATE-OBJECT.
    INVOKE CLASS UTILS METHOD "loadClass" USING CLASS-NAME OBJECT-CLASS RETURNING CLASS-NAME
    INVOKE CLASS-NAME METHOD "getConstructor" USING CONSTRUCTOR-ARGS-ARRAY RETURNING CONSTRUCTOR
    INVOKE CONSTRUCTOR METHOD "newInstance" USING CONSTRUCTOR-ARGS RETURNING FUNCTION-RESULT.

IN-LOCK.
    INVOKE LOCK METHOD "lock"
    PERFORM FUNCTION
    INVOKE LOCK METHOD "unlock".

IN-READ-LOCK.
    INVOKE LOCK METHOD "readLock" RETURNING LOCK
    PERFORM IN-LOCK USING LOCK FUNCTION.

IN-WRITE-LOCK.
    INVOKE LOCK METHOD "writeLock" RETURNING LOCK
    PERFORM IN-LOCK USING LOCK FUNCTION.

DUPLICATES.
    INVOKE CLASS SCALA.PREDEF METHOD "groupBy" USING S IDENTITY RETURNING DUPLICATES-LIST
    INVOKE DUPLICATES-LIST METHOD "map" USING LAMBDA-1 RETURNING DUPLICATES-LIST
    INVOKE DUPLICATES-LIST METHOD "filter" USING LAMBDA-2 RETURNING FUNCTION-RESULT.

LISTENER-LIST-TO-END-POINTS.
    INVOKE CLASS SOCKSERVERCONFIGS METHOD "listenerListToEndPoints" USING LISTENERS SECURITY-PROTOCOL-MAP RETURNING ENDPOINTS
    PERFORM VALIDATE-END-POINTS USING ENDPOINTS LISTENERS.

VALIDATE-END-POINTS.
    INVOKE ENDPOINTS METHOD "map" USING LAMBDA-3 RETURNING DISTINCT-LISTENER-NAMES
    REQUIRE DISTINCT-LISTENER-NAMES.SIZE = ENDPOINTS.SIZE "Each listener must have a different name, listeners: {}"
    PERFORM
        MOVE ENDPOINTS TO DUPLICATE-PORTS
        FILTER DUPLICATE-PORTS WHERE PORT <> 0
        PARTITION DUPLICATE-PORTS INTO DUPLICATE-PORTS-WITH-IP-HOSTS DUPLICATE-PORTS-WITHOUT-IP-HOSTS
    END-PERFORM
    PERFORM VALIDATE-DUPLICATE-PORTS USING DUPLICATE-PORTS-WITH-IP-HOSTS DUPLICATE-PORTS-WITHOUT-IP-HOSTS LISTENERS.

VALIDATE-DUPLICATE-PORTS.
    PERFORM VARYING PORT FROM 1 BY 1 UNTIL PORT > DUPLICATE-PORTS-WITH-IP-HOSTS.SIZE
        MOVE DUPLICATE-PORTS-WITH-IP-HOSTS(PORT) TO EP1
        MOVE DUPLICATE-PORTS-WITH-IP-HOSTS(PORT+1) TO EP2
        IF REQUIRE-DISTINCT-PORTS
            REQUIRE VALIDATE-ONE-IS-IPV4-OTHER-IPV6(EP1.HOST, EP2.HOST)
                "If you have two listeners on the same port then one needs to be IPv4 and the other IPv6, listeners: {}, port: {}"
            IF DUPLICATE-PORTS-WITHOUT-IP-HOSTS.SIZE > 0
                THROW EXCEPTION "Each listener must have a different port unless exactly one listener has an IPv4 address and the other IPv6 address, listeners: {}, port: {}"
        END-IF
    END-PERFORM.

VALIDATE-ONE-IS-IPV4-OTHER-IPV6.
    INVOKE CLASS INETADDRESSVALIDATOR METHOD "isValidInet4Address" USING HOST1 RETURNING RESULT1
    INVOKE CLASS INETADDRESSVALIDATOR METHOD "isValidInet6Address" USING HOST2 RETURNING RESULT2
    RETURN (RESULT1 AND RESULT2) OR (RESULT2 AND RESULT1).

GENERATE-UUID-AS-BASE64.
    INVOKE CLASS UUID METHOD "randomUUID" RETURNING UUID
    INVOKE CLASS BASE64 METHOD "getUrlEncoder" RETURNING ENCODER
    INVOKE ENCODER METHOD "withoutPadding" RETURNING ENCODER
    INVOKE ENCODER METHOD "encodeToString" USING GET-BYTES-FROM-UUID(UUID) RETURNING FUNCTION-RESULT.

GET-BYTES-FROM-UUID.
    INVOKE CLASS BYTEBUFFER METHOD "wrap" USING UUID-BYTES RETURNING BUFFER
    INVOKE BUFFER METHOD "putLong" USING UUID.MOSTSIGNIFICANTBITS
    INVOKE BUFFER METHOD "putLong" USING UUID.LEASTSIGNIFICANTBITS
    RETURN UUID-BYTES.

PROPS-WITH.
    INVOKE CLASS PROPERTIES CONSTRUCTOR RETURNING PROPERTIES-LIST
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > PROPS.SIZE
        MOVE PROPS(I) TO PROP-ENTRY
        INVOKE PROPERTIES-LIST METHOD "put" USING PROP-ENTRY.KEY PROP-ENTRY.VALUE
    END-PERFORM
    RETURN PROPERTIES-LIST.

REPLICA-TO-BROKER-ASSIGNMENT-AS-SCALA.
    INVOKE CLASS COLLECTIONCONVERTERS METHOD "asScala" USING MAP RETURNING REPLICA-TO-BROKER-ASSIGNMENT
    RETURN REPLICA-TO-BROKER-ASSIGNMENT.

STOP RUN.