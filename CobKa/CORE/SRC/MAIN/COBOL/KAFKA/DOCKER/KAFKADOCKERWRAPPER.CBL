IDENTIFICATION DIVISION.
PROGRAM-ID. KAFKA-DOCKER-WRAPPER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "CONSTANTS".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NAMESPACE.
   03 COMMAND PIC X(30).
   03 CONFIG-FILE PIC X(100).
   03 DEFAULT-CONFIGS-PATH PIC X(100).
   03 MOUNTED-CONFIGS-PATH PIC X(100).
   03 FINAL-CONFIGS-PATH PIC X(100).
01 ENV-VARS.
   03 CLUSTER-ID PIC X(50).
   03 KAFKA-LOG4J-LOGGERS PIC X(200).
   03 KAFKA-LOG4J-ROOT-LOGLEVEL PIC X(20).
   03 KAFKA-TOOLS-LOG4J-LOGLEVEL PIC X(20).
01 CONFIG-DATA.
   03 SERVER-CONFIGS-TO-ADD PIC X(500).
   03 LOGGER-FROM-ENV OCCURS 10 TIMES.
      05 LOGGER-NAME PIC X(50).
      05 LOGGER-LEVEL PIC X(20).
   03 ROOT-OPTION.
      05 ROOT-LEVEL PIC X(20).
01 CONFIG-FILE-DATA.
   03 SERVER-PROPS-FILE PIC X(100).
   03 LOG4J2-PROPS-FILE PIC X(100).
   03 TOOLS-LOG4J2-FILE PIC X(100).

PROCEDURE DIVISION.
MAIN-PROCEDURE.
    PERFORM PARSE-ARGUMENTS.
    PERFORM PROCESS-COMMAND.
    STOP RUN.

PARSE-ARGUMENTS.
    MOVE FUNCTION TRIM(COMMAND-LINE-ARGUMENT(1)) TO COMMAND.
    EVALUATE COMMAND
        WHEN "start"
            MOVE FUNCTION TRIM(COMMAND-LINE-ARGUMENT(2)) TO CONFIG-FILE
        WHEN "setup"
            MOVE FUNCTION TRIM(COMMAND-LINE-ARGUMENT(2)) TO DEFAULT-CONFIGS-PATH
            MOVE FUNCTION TRIM(COMMAND-LINE-ARGUMENT(3)) TO MOUNTED-CONFIGS-PATH
            MOVE FUNCTION TRIM(COMMAND-LINE-ARGUMENT(4)) TO FINAL-CONFIGS-PATH
        WHEN OTHER
            DISPLAY "Unknown operation " COMMAND ". Please provide a valid operation: 'setup'."
            STOP RUN.

PROCESS-COMMAND.
    EVALUATE COMMAND
        WHEN "setup"
            PERFORM PREPARE-CONFIGS
            PERFORM FORMAT-STORAGE
        WHEN "start"
            PERFORM START-KAFKA-SERVER
        WHEN OTHER
            DISPLAY "Unknown operation " COMMAND ". Please provide a valid operation: 'setup'."
            STOP RUN.

PREPARE-CONFIGS.
    PERFORM PREPARE-SERVER-CONFIGS.
    PERFORM PREPARE-LOG4J2-CONFIGS.
    PERFORM PREPARE-TOOLS-LOG4J2-CONFIGS.

PREPARE-SERVER-CONFIGS.
    MOVE FINAL-CONFIGS-PATH TO SERVER-PROPS-FILE
    PERFORM GET-SERVER-CONFIGS-FROM-ENV
    PERFORM ADD-TO-FILE USING SERVER-CONFIGS-TO-ADD, SERVER-PROPS-FILE, STANDARD-OPEN-OPTION-APPEND
    IF SERVER-PROPS-FILE IS EMPTY
        MOVE DEFAULT-CONFIGS-PATH TO SERVER-PROPS-FILE
        PERFORM COPY-FILE USING SERVER-PROPS-FILE, FINAL-CONFIGS-PATH.

PREPARE-LOG4J2-CONFIGS.
    MOVE DEFAULT-CONFIGS-PATH TO LOG4J2-PROPS-FILE
    MOVE MOUNTED-CONFIGS-PATH TO LOG4J2-PROPS-FILE
    MOVE FINAL-CONFIGS-PATH TO LOG4J2-PROPS-FILE
    PERFORM GET-LOG4J2-CONFIGS-FROM-ENV
    PERFORM GET-LOG4J2-ROOT-CONFIGS-FROM-ENV
    PERFORM ADD-TO-YAML USING LOGGER-FROM-ENV, ROOT-OPTION, LOG4J2-PROPS-FILE.

PREPARE-TOOLS-LOG4J2-CONFIGS.
    MOVE DEFAULT-CONFIGS-PATH TO TOOLS-LOG4J2-FILE 
    MOVE MOUNTED-CONFIGS-PATH TO TOOLS-LOG4J2-FILE
    MOVE FINAL-CONFIGS-PATH TO TOOLS-LOG4J2-FILE
    PERFORM GET-TOOLS-LOG4J2-CONFIGS-FROM-ENV
    PERFORM ADD-TO-YAML USING EMPTY-ARRAY, ROOT-OPTION, TOOLS-LOG4J2-FILE.

FORMAT-STORAGE.
    PERFORM GET-CLUSTER-ID
    PERFORM CALL-STORAGE-TOOL USING "format", CLUSTER-ID, FINAL-CONFIGS-PATH.

START-KAFKA-SERVER.
    PERFORM CALL-KAFKA USING CONFIG-FILE.

GET-SERVER-CONFIGS-FROM-ENV.
    MOVE FUNCTION TRIM(ENV-VAR("KAFKA_")) TO SERVER-CONFIGS-TO-ADD
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LENGTH(SERVER-CONFIGS-TO-ADD)
        IF SERVER-CONFIGS-TO-ADD(I:1) NOT = SPACE
            IF SERVER-CONFIGS-TO-ADD(I:6) NOT = "KAFKA_"
                AND SERVER-CONFIGS-TO-ADD(I:1) NOT = NEWLINE-CHAR
                MOVE SERVER-CONFIGS-TO-ADD(I:) TO SERVER-CONFIGS-TO-ADD
                MOVE FUNCTION SUBSTITUTE(SERVER-CONFIGS-TO-ADD, "_", ".") TO SERVER-CONFIGS-TO-ADD
                MOVE FUNCTION SUBSTITUTE(SERVER-CONFIGS-TO-ADD, "__", "_") TO SERVER-CONFIGS-TO-ADD
                MOVE FUNCTION SUBSTITUTE(SERVER-CONFIGS-TO-ADD, "...", "-") TO SERVER-CONFIGS-TO-ADD
                EXIT PARAGRAPH
        END-IF
    END-PERFORM.

GET-LOG4J2-CONFIGS-FROM-ENV.
    MOVE FUNCTION TRIM(ENV-VAR(KAFKA-LOG4J-LOGGERS)) TO KAFKA-LOG4J-LOGGERS
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LENGTH(KAFKA-LOG4J-LOGGERS)
        IF KAFKA-LOG4J-LOGGERS(I:1) NOT = SPACE
            MOVE FUNCTION TRIM(KAFKA-LOG4J-LOGGERS(I:)) TO LOGGER-FROM-ENV(1)
            MOVE FUNCTION TRIM(KAFKA-LOG4J-LOGGERS(I:INDEX-OF(KAFKA-LOG4J-LOGGERS(I:), "="))) TO LOGGER-NAME(1)
            MOVE FUNCTION TRIM(KAFKA-LOG4J-LOGGERS(INDEX-OF(KAFKA-LOG4J-LOGGERS(I:), "=") + 1:)) TO LOGGER-LEVEL(1)
            ADD 1 TO LOGGER-FROM-ENV-OCCUR
        END-IF
    END-PERFORM.

GET-LOG4J2-ROOT-CONFIGS-FROM-ENV.
    MOVE FUNCTION TRIM(ENV-VAR(KAFKA-LOG4J-ROOT-LOGLEVEL)) TO KAFKA-LOG4J-ROOT-LOGLEVEL
    IF KAFKA-LOG4J-ROOT-LOGLEVEL NOT = SPACE
        MOVE KAFKA-LOG4J-ROOT-LOGLEVEL TO ROOT-LEVEL
    END-IF.

GET-TOOLS-LOG4J2-CONFIGS-FROM-ENV.
    MOVE FUNCTION TRIM(ENV-VAR(KAFKA-TOOLS-LOG4J-LOGLEVEL)) TO KAFKA-TOOLS-LOG4J-LOGLEVEL
    IF KAFKA-TOOLS-LOG4J-LOGLEVEL NOT = SPACE
        MOVE KAFKA-TOOLS-LOG4J-LOGLEVEL TO ROOT-LEVEL
    END-IF.

GET-CLUSTER-ID.
    MOVE FUNCTION TRIM(ENV-VAR("CLUSTER_ID")) TO CLUSTER-ID
    IF CLUSTER-ID IS EMPTY
        DISPLAY "CLUSTER_ID environment variable is not set."
        STOP RUN
    END-IF.

ADD-TO-FILE.
    IF FUNCTION TRIM(P1) NOT = SPACE
        WRITE P1 TO P2 USING P3
    END-IF.

ADD-TO-YAML.
    PERFORM COPY-FILE USING P2, P3
    PERFORM OVERRIDE-LOG4J-CONFIG-BY-ENV USING P1, P2, P3.

COPY-FILE.
    IF FUNCTION TRIM(P1) NOT = SPACE
        MOVE P1 TO P2
    END-IF.

CALL-STORAGE-TOOL.
    CALL "StorageTool" USING P1, P2, P3.

CALL-KAFKA.
    CALL "Kafka" USING P1.

OVERRIDE-LOG4J-CONFIG-BY-ENV.
*> Implement the logic to override the log4j configuration using the environment variables

STOP RUN.