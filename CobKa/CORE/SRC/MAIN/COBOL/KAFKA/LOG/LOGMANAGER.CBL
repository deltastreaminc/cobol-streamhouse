IDENTIFICATION DIVISION.
PROGRAM-ID. LOG-MANAGER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
DATA-BASE SECTION.

DATA DIVISION.
FILE SECTION.

WORKING-STORAGE SECTION.
01 CURRENT-LOGS PIC X(30) VALUE 'kafka.log.Pool[TopicPartition, UnifiedLog]'.
01 FUTURE-LOGS PIC X(30) VALUE 'kafka.log.Pool[TopicPartition, UnifiedLog]'.
01 LOGS-TO-BE-DELETED PIC X(48) VALUE 'java.util.concurrent.LinkedBlockingQueue[(UnifiedLog, Long)]'.
01 STRAY-LOGS PIC X(30) VALUE 'kafka.log.Pool[TopicPartition, UnifiedLog]'.
01 RECOVERY-POINT-CHECKPOINTS PIC X(48) VALUE 'java.util.concurrent.ConcurrentHashMap[File, OffsetCheckpointFile]'.
01 LOG-START-OFFSET-CHECKPOINTS PIC X(48) VALUE 'java.util.concurrent.ConcurrentHashMap[File, OffsetCheckpointFile]'.
01 PREFERRED-LOG-DIRS PIC X(48) VALUE 'java.util.concurrent.ConcurrentHashMap[TopicPartition, String]'.
01 HAD-CLEAN-SHUTDOWN-FLAGS PIC X(48) VALUE 'java.util.concurrent.ConcurrentHashMap[String, Boolean]'.
01 LOAD-LOGS-COMPLETED-FLAGS PIC X(48) VALUE 'java.util.concurrent.ConcurrentHashMap[String, Boolean]'.
01 CLEANER PIC X(21) VALUE 'kafka.log.LogCleaner'.
01 METRICS-GROUP PIC X(27) VALUE 'org.apache.kafka.server.metrics.KafkaMetricsGroup'.
01 PARTITIONS-INITIALIZING PIC X(48) VALUE 'scala.collection.mutable.ConcurrentHashMap[TopicPartition, Boolean]'.

PROCEDURE DIVISION.
STARTUP.
    CALL "fetchTopicConfigOverrides" USING CURRENT-DEFAULT-CONFIG, TOPIC-NAMES, RETURNING TOPIC-CONFIG-OVERRIDES.
    CALL "startupWithConfigOverrides" USING CURRENT-DEFAULT-CONFIG, TOPIC-CONFIG-OVERRIDES, IS-STRAY.

SHUTDOWN.
    CALL "shutdown" USING BROKER-EPOCH.

TRUNCATE-TO.
    MOVE PARTITIONOFFSETS TO WS-PARTITION-OFFSETS.
    CALL "truncateTo" USING WS-PARTITION-OFFSETS, IS-FUTURE.

TRUNCATE-FULLY-AND-START-AT.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    MOVE NEWOFFSET TO WS-NEW-OFFSET.
    MOVE LOGSTARTOFFSET-OPT TO WS-LOGSTARTOFFSET-OPT.
    CALL "truncateFullyAndStartAt" USING WS-TOPIC-PARTITION, WS-NEW-OFFSET, IS-FUTURE, WS-LOGSTARTOFFSET-OPT.

CHECKPOINT-LOG-RECOVERY-OFFSETS.
    CALL "checkpointLogRecoveryOffsets".

CHECKPOINT-LOG-START-OFFSETS.
    CALL "checkpointLogStartOffsets".

GET-OR-CREATE-LOG.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    MOVE IS-NEW TO WS-IS-NEW.
    MOVE IS-FUTURE TO WS-IS-FUTURE.
    MOVE TOPICID TO WS-TOPICID.
    MOVE TARGETLOGDIRECTORYID TO WS-TARGETLOGDIRECTORYID.
    CALL "getOrCreateLog" USING WS-TOPIC-PARTITION, WS-IS-NEW, WS-IS-FUTURE, WS-TOPICID, WS-TARGETLOGDIRECTORYID RETURNING WS-LOG.

UPDATE-TOPIC-CONFIG.
    MOVE TOPIC TO WS-TOPIC.
    MOVE NEWTOPICCONFIG TO WS-NEWTOPICCONFIG.
    MOVE IS-REMOTE-LOG-STORAGE-SYSTEM-ENABLED TO WS-IS-REMOTE-LOG-STORAGE-SYSTEM-ENABLED.
    MOVE WAS-REMOTE-LOG-ENABLED TO WS-WAS-REMOTE-LOG-ENABLED.
    CALL "updateTopicConfig" USING WS-TOPIC, WS-NEWTOPICCONFIG, WS-IS-REMOTE-LOG-STORAGE-SYSTEM-ENABLED, WS-WAS-REMOTE-LOG-ENABLED.

ASYNC-DELETE.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    MOVE IS-FUTURE TO WS-IS-FUTURE.
    MOVE CHECKPOINT TO WS-CHECKPOINT.
    MOVE IS-STRAY TO WS-IS-STRAY.
    CALL "asyncDelete" USING WS-TOPIC-PARTITION, WS-IS-FUTURE, WS-CHECKPOINT, WS-IS-STRAY RETURNING WS-REMOVED-LOG.

ASYNC-DELETE-TOPIC-PARTITIONS.
    MOVE TOPICPARTITIONS TO WS-TOPIC-PARTITIONS.
    MOVE IS-STRAY TO WS-IS-STRAY.
    CALL "asyncDelete" USING WS-TOPIC-PARTITIONS, WS-IS-STRAY, ERROR-HANDLER.

REPLACE-CURRENT-WITH-FUTURE-LOG.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    CALL "replaceCurrentWithFutureLog" USING WS-TOPIC-PARTITION.

MAYBE-UPDATE-PREFERRED-LOG-DIR.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    MOVE LOGDIR TO WS-LOGDIR.
    CALL "maybeUpdatePreferredLogDir" USING WS-TOPIC-PARTITION, WS-LOGDIR.

ABORTING-AND-PAUSING-CLEANING.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    CALL "abortAndPauseCleaning" USING WS-TOPIC-PARTITION.

ABORTING-CLEANING.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    CALL "abortCleaning" USING WS-TOPIC-PARTITION.

GET-LOG.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    MOVE IS-FUTURE TO WS-IS-FUTURE.
    CALL "getLog" USING WS-TOPIC-PARTITION, WS-IS-FUTURE RETURNING WS-LOG.

INITIALIZING-LOG.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    CALL "initializingLog" USING WS-TOPIC-PARTITION.

FINISHED-INITIALIZING-LOG.
    MOVE TOPICPARTITION TO WS-TOPIC-PARTITION.
    MOVE MAYBELOG TO WS-MAYBELOG.
    CALL "finishedInitializingLog" USING WS-TOPIC-PARTITION, WS-MAYBELOG.

HANDLE-LOG-DIR-FAILURE.
    MOVE DIR TO WS-DIR.
    CALL "handleLogDirFailure" USING WS-DIR.

RECONFIGURE-DEFAULT-LOG-CONFIG.
    MOVE LOGCONFIG TO WS-LOGCONFIG.
    CALL "reconfigureDefaultLogConfig" USING WS-LOGCONFIG.

RECOVER-ABANDONED-FUTURE-LOGS.
    MOVE BROKERID TO WS-BROKERID.
    MOVE NEWTOPICSIMAGE TO WS-NEWTOPICSIMAGE.
    CALL "recoverAbandonedFutureLogs" USING WS-BROKERID, WS-NEWTOPICSIMAGE.

CLEANUP-LOGS.
    CALL "cleanupLogs".

FLUSH-DIRTY-LOGS.
    CALL "flushDirtyLogs".

GET-LOG-BY-TOPIC.
    MOVE TOPIC TO WS-TOPIC.
    CALL "logsByTopic" USING WS-TOPIC RETURNING WS-LOGS.

IS-LOG-DIR-ONLINE.
    MOVE LOGDIR TO WS-LOGDIR.
    CALL "isLogDirOnline" USING WS-LOGDIR RETURNING WS-IS-ONLINE.

READ-BROKER-EPOCH-FROM-CLEAN-SHUTDOWN-FILES.
    CALL "readBrokerEpochFromCleanShutdownFiles" RETURNING WS-BROKER-EPOCH.

STOP RUN.