IDENTIFICATION DIVISION.
PROGRAM-ID. LOG-CLEANER-MANAGER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "KAFKA-COMMON.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 LOG-DIRS-COUNT            PIC 9(2) COMP.
01 LOG-DIRS                  OCCURS 1 TO 99 TIMES DEPENDING ON LOG-DIRS-COUNT
                             INDEXED BY LOG-DIR-IDX.
   05 LOG-DIR                PIC X(256).
01 LOGS                      PIC X(256) VALUE SPACE.
01 LOG-DIR-FAILURE-CHANNEL   PIC X(256) VALUE SPACE.

01 METRICS-GROUP             PIC X(128) VALUE SPACE.
01 METRICS-MAP.
   05 METRICS-MAP-COUNT      PIC 9(2) COMP.
   05 METRICS-MAP-ENTRY      OCCURS 1 TO 99 TIMES DEPENDING ON METRICS-MAP-COUNT
                             INDEXED BY METRICS-MAP-IDX.
      10 METRIC-NAME         PIC X(64).
      10 METRIC-TAGS         PIC X(256).

01 CHECKPOINT-FILE-NAME      PIC X(32) VALUE "cleaner-offset-checkpoint".

01 IN-PROGRESS               PIC X(256) VALUE SPACE.
01 UNCLEANABLE-PARTITIONS.
   05 UNCLEANABLE-PARTITIONS-COUNT PIC 9(2) COMP.
   05 UNCLEANABLE-PARTITION  OCCURS 1 TO 99 TIMES DEPENDING ON UNCLEANABLE-PARTITIONS-COUNT
                             INDEXED BY UNCLEANABLE-PARTITION-IDX.
      10 UNCLEANABLE-LOG-DIR  PIC X(256).
      10 UNCLEANABLE-PARTITION-ID PIC X(256).

01 LOCK                      PIC X(1) VALUE "N".
01 PAUSED-CLEANING-COND      PIC X(1) VALUE "N".

01 DIRTIEST-LOG-CLEANABLE-RATIO PIC 9V9(2) VALUE 0.
01 TIME-OF-LAST-RUN          PIC 9(18) COMP-3 VALUE 0.

PROCEDURE DIVISION.

    PERFORM INIT-METRICS.

    PERFORM LOOP-CLEANING-STATES.

INIT-METRICS.
    PERFORM VARYING LOG-DIR-IDX FROM 1 BY 1 UNTIL LOG-DIR-IDX > LOG-DIRS-COUNT
        MOVE LOG-DIRS(LOG-DIR-IDX) TO UNCLEANABLE-LOG-DIR(LOG-DIR-IDX)
        PERFORM REGISTER-UNCLEANABLE-PARTITIONS-METRIC
    END-PERFORM.
    PERFORM REGISTER-DIRTIEST-LOG-CLEANABLE-RATIO-METRIC.
    PERFORM REGISTER-TIME-SINCE-LAST-RUN-METRIC.

LOOP-CLEANING-STATES.
    PERFORM UNTIL THE-END
        PERFORM GRAB-FILTHIEST-COMPACTED-LOG
        PERFORM PAUSE-CLEANING-FOR-NON-COMPACTED-PARTITIONS
        PERFORM DELETABLE-LOGS
        PERFORM ABORT-CLEANING
        PERFORM ABORT-AND-PAUSE-CLEANING
        PERFORM RESUME-CLEANING
        PERFORM DONE-CLEANING
        PERFORM DONE-DELETING
        PERFORM MAINTAIN-UNCLEANABLE-PARTITIONS
    END-PERFORM.

GRAB-FILTHIEST-COMPACTED-LOG.
    PERFORM LOCK-MANAGER.
    PERFORM FIND-DIRTIEST-LOG.
    PERFORM UNLOCK-MANAGER.

FIND-DIRTIEST-LOG.
    MOVE ZERO TO DIRTIEST-LOG-CLEANABLE-RATIO.
    MOVE SPACES TO IN-PROGRESS.
    PERFORM VARYING LOG-IDX FROM 1 BY 1 UNTIL LOG-IDX > LOGS-COUNT
        IF LOGS(LOG-IDX).COMPACTION-ENABLED
            IF NOT IN-PROGRESS-FOR-PARTITION(LOGS(LOG-IDX).PARTITION-ID)
                IF NOT IS-UNCLEANABLE-PARTITION(LOGS(LOG-IDX).PARTITION-ID)
                    PERFORM CALCULATE-CLEANABLE-OFFSETS
                    PERFORM CALCULATE-CLEANABLE-BYTES
                    PERFORM UPDATE-CHECKPOINT
                    PERFORM CALCULATE-COMPACTION-DELAY
                    PERFORM UPDATE-MAX-COMPACTION-DELAY
                    PERFORM CREATE-LOG-TO-CLEAN
                    IF LOG-TO-CLEAN.TOTAL-BYTES > 0
                        IF (LOG-TO-CLEAN.NEEDS-COMPACTION-NOW AND LOG-TO-CLEAN.CLEANABLE-BYTES > 0)
                           OR LOG-TO-CLEAN.CLEANABLE-RATIO > LOGS(LOG-IDX).MIN-CLEANABLE-RATIO
                            MOVE LOG-TO-CLEAN TO DIRTIEST-LOG
                            MOVE LOG-TO-CLEAN.CLEANABLE-RATIO TO DIRTIEST-LOG-CLEANABLE-RATIO
                        END-IF
                    END-IF
                END-IF
            END-IF
        END-IF
    END-PERFORM.
    IF DIRTIEST-LOG IS NOT EQUAL TO SPACES
        MOVE DIRTIEST-LOG TO IN-PROGRESS
    END-IF.

PAUSE-CLEANING-FOR-NON-COMPACTED-PARTITIONS.
    PERFORM LOCK-MANAGER.
    MOVE SPACES TO IN-PROGRESS.
    PERFORM VARYING LOG-IDX FROM 1 BY 1 UNTIL LOG-IDX > LOGS-COUNT
        IF NOT LOGS(LOG-IDX).COMPACTION-ENABLED
            IF NOT IN-PROGRESS-FOR-PARTITION(LOGS(LOG-IDX).PARTITION-ID)
                MOVE LOGS(LOG-IDX).PARTITION-ID TO IN-PROGRESS
                MOVE "PAUSED" TO IN-PROGRESS-STATE(LOGS(LOG-IDX).PARTITION-ID)
            END-IF
        END-IF
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

DELETABLE-LOGS.
    PERFORM LOCK-MANAGER.
    MOVE SPACES TO IN-PROGRESS.
    PERFORM VARYING LOG-IDX FROM 1 BY 1 UNTIL LOG-IDX > LOGS-COUNT
        IF LOGS(LOG-IDX).COMPACTION-ENABLED
            IF NOT IN-PROGRESS-FOR-PARTITION(LOGS(LOG-IDX).PARTITION-ID)
                IF NOT IS-UNCLEANABLE-PARTITION(LOGS(LOG-IDX).PARTITION-ID)
                    MOVE LOGS(LOG-IDX).PARTITION-ID TO IN-PROGRESS
                    MOVE "IN-PROGRESS" TO IN-PROGRESS-STATE(LOGS(LOG-IDX).PARTITION-ID)
                END-IF
            END-IF
        END-IF
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

ABORT-CLEANING.
    PERFORM LOCK-MANAGER.
    PERFORM VARYING PARTITION-IDX FROM 1 BY 1 UNTIL PARTITION-IDX > UNCLEANABLE-PARTITIONS-COUNT
        MOVE UNCLEANABLE-PARTITION(PARTITION-IDX).PARTITION-ID TO PARTITION-ID
        PERFORM ABORT-CLEANING-FOR-PARTITION
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

ABORT-CLEANING-FOR-PARTITION.
    PERFORM LOCK-MANAGER.
    IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "IN-PROGRESS"
        MOVE "ABORTED" TO IN-PROGRESS-STATE(PARTITION-ID)
    ELSE
        MOVE "PAUSED" TO IN-PROGRESS-STATE(PARTITION-ID)
        MOVE 1 TO PAUSED-COUNT(PARTITION-ID)
    END-IF.
    PERFORM UNTIL IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "PAUSED"
        PERFORM PAUSED-CLEANING-COND-WAIT
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

ABORT-AND-PAUSE-CLEANING.
    PERFORM LOCK-MANAGER.
    PERFORM VARYING PARTITION-IDX FROM 1 BY 1 UNTIL PARTITION-IDX > UNCLEANABLE-PARTITIONS-COUNT
        MOVE UNCLEANABLE-PARTITION(PARTITION-IDX).PARTITION-ID TO PARTITION-ID
        PERFORM ABORT-AND-PAUSE-CLEANING-FOR-PARTITION
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

ABORT-AND-PAUSE-CLEANING-FOR-PARTITION.
    PERFORM LOCK-MANAGER.
    IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = SPACES
        MOVE "PAUSED" TO IN-PROGRESS-STATE(PARTITION-ID)
        MOVE 1 TO PAUSED-COUNT(PARTITION-ID)
    ELSE
        IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "IN-PROGRESS"
            MOVE "ABORTED" TO IN-PROGRESS-STATE(PARTITION-ID)
        ELSE
            IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "PAUSED"
                ADD 1 TO PAUSED-COUNT(PARTITION-ID)
                MOVE PAUSED-COUNT(PARTITION-ID) TO IN-PROGRESS-STATE(PARTITION-ID)
            ELSE
                PERFORM INVALID-STATE-EXCEPTION
            END-IF
        END-IF
    END-IF.
    PERFORM UNTIL IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "PAUSED"
        PERFORM PAUSED-CLEANING-COND-WAIT
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

RESUME-CLEANING.
    PERFORM LOCK-MANAGER.
    PERFORM VARYING PARTITION-IDX FROM 1 BY 1 UNTIL PARTITION-IDX > UNCLEANABLE-PARTITIONS-COUNT
        MOVE UNCLEANABLE-PARTITION(PARTITION-IDX).PARTITION-ID TO PARTITION-ID
        PERFORM RESUME-CLEANING-FOR-PARTITION
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

RESUME-CLEANING-FOR-PARTITION.
    PERFORM LOCK-MANAGER.
    IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = SPACES
        PERFORM INVALID-STATE-EXCEPTION
    ELSE
        IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "PAUSED"
            IF PAUSED-COUNT(PARTITION-ID) = 1
                MOVE SPACES TO IN-PROGRESS-STATE(PARTITION-ID)
            ELSE
                SUBTRACT 1 FROM PAUSED-COUNT(PARTITION-ID)
                MOVE PAUSED-COUNT(PARTITION-ID) TO IN-PROGRESS-STATE(PARTITION-ID)
            END-IF
        ELSE
            PERFORM INVALID-STATE-EXCEPTION
        END-IF
    END-IF.
    PERFORM UNLOCK-MANAGER.

DONE-CLEANING.
    PERFORM LOCK-MANAGER.
    PERFORM VARYING PARTITION-IDX FROM 1 BY 1 UNTIL PARTITION-IDX > UNCLEANABLE-PARTITIONS-COUNT
        MOVE UNCLEANABLE-PARTITION(PARTITION-IDX).PARTITION-ID TO PARTITION-ID
        PERFORM DONE-CLEANING-FOR-PARTITION
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

DONE-CLEANING-FOR-PARTITION.
    PERFORM LOCK-MANAGER.
    IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "IN-PROGRESS"
        PERFORM UPDATE-CHECKPOINT
        MOVE SPACES TO IN-PROGRESS-STATE(PARTITION-ID)
    ELSE
        IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "ABORTED"
            MOVE "PAUSED" TO IN-PROGRESS-STATE(PARTITION-ID)
            MOVE 1 TO PAUSED-COUNT(PARTITION-ID)
            PERFORM PAUSED-CLEANING-COND-SIGNAL
        ELSE
            PERFORM INVALID-STATE-EXCEPTION
        END-IF
    END-IF.
    PERFORM UNLOCK-MANAGER.

DONE-DELETING.
    PERFORM LOCK-MANAGER.
    PERFORM VARYING PARTITION-IDX FROM 1 BY 1 UNTIL PARTITION-IDX > UNCLEANABLE-PARTITIONS-COUNT
        MOVE UNCLEANABLE-PARTITION(PARTITION-IDX).PARTITION-ID TO PARTITION-ID
        PERFORM DONE-DELETING-FOR-PARTITION
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

DONE-DELETING-FOR-PARTITION.
    PERFORM LOCK-MANAGER.
    IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "IN-PROGRESS"
        MOVE SPACES TO IN-PROGRESS-STATE(PARTITION-ID)
    ELSE
        IF IN-PROGRESS-FOR-PARTITION(PARTITION-ID) = "ABORTED"
            MOVE "PAUSED" TO IN-PROGRESS-STATE(PARTITION-ID)
            MOVE 1 TO PAUSED-COUNT(PARTITION-ID)
            PERFORM PAUSED-CLEANING-COND-SIGNAL
        ELSE
            PERFORM INVALID-STATE-EXCEPTION
        END-IF
    END-IF.
    PERFORM UNLOCK-MANAGER.

MAINTAIN-UNCLEANABLE-PARTITIONS.
    PERFORM LOCK-MANAGER.
    PERFORM VARYING PARTITION-IDX FROM 1 BY 1 UNTIL PARTITION-IDX > UNCLEANABLE-PARTITIONS-COUNT
        MOVE UNCLEANABLE-PARTITION(PARTITION-IDX).PARTITION-ID TO PARTITION-ID
        IF NOT IS-LOG-PRESENT(PARTITION-ID)
            PERFORM REMOVE-UNCLEANABLE-PARTITION(UNCLEANABLE-PARTITION(PARTITION-IDX).UNCLEANABLE-LOG-DIR, PARTITION-ID)
        END-IF
    END-PERFORM.
    PERFORM UNLOCK-MANAGER.

REGISTER-UNCLEANABLE-PARTITIONS-METRIC.
    MOVE UNCLEANABLE-LOG-DIR TO METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-TAGS.
    MOVE UNCLEANABLE-PARTITIONS-COUNT TO METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-VALUE.
    MOVE "uncleanable-partitions-count" TO METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-NAME.
    ADD 1 TO METRICS-MAP-COUNT.
    PERFORM REGISTER-METRIC.

REGISTER-DIRTIEST-LOG-CLEANABLE-RATIO-METRIC.
    MOVE "max-dirty-percent" TO METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-NAME.
    MOVE 100 * DIRTIEST-LOG-CLEANABLE-RATIO TO METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-VALUE.
    ADD 1 TO METRICS-MAP-COUNT.
    PERFORM REGISTER-METRIC.

REGISTER-TIME-SINCE-LAST-RUN-METRIC.
    MOVE "time-since-last-run-ms" TO METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-NAME.
    COMPUTE METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-VALUE = TIME-OF-LAST-RUN - CURRENT-TIMESTAMP.
    ADD 1 TO METRICS-MAP-COUNT.
    PERFORM REGISTER-METRIC.

REGISTER-METRIC.
    PERFORM CALL "REGISTER-METRIC" USING METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-NAME,
                                           METRICS-MAP-ENTRY(METRICS-MAP-COUNT).METRIC-VALUE,
                                           METRICS-MAP-ENTRY(