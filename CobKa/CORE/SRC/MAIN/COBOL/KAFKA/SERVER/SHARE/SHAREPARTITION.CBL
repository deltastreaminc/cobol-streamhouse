IDENTIFICATION DIVISION.
PROGRAM-ID. SHARE-PARTITION.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    FUNCTION OFFSETFORLATESTTIME IMPORT FROM KAFKA-FECT-UTILS.
    FUNCTION OFFSETFOREARLIESTIME IMPORT FROM KAFKA-FECT-UTILS.
    FUNCTION OFFSETFORTIME IMPORT FROM KAFKA-FECT-UTILS.

DATA DIVISION.
WORKING-STORAGE SECTION.
   01 WS-GROUP-ID PIC X(100).
   01 WS-TOPIC-ID-PARTITION.
       05 WS-TOPIC-ID PIC 9(9).
       05 WS-PARTITION PIC 9(9).
   01 WS-LEADER-EPOCH PIC 9(9).
   01 WS-MAX-INFLIGHT-MESSAGES PIC 9(9).
   01 WS-MAX-DELIVERY-COUNT PIC 9(9).
   01 WS-DEFAULT-RECORD-LOCK-DURATION-MS PIC 9(9).
   01 WS-TIMER.
   01 WS-TIME.
   01 WS-PERSISTER.
   01 WS-REPLICA-MANAGER.
   01 WS-GROUP-CONFIG-MANAGER.
   01 WS-SHARE-PARTITION-LISTENER.
   01 WS-LOAD-START-TIME-MS PIC 9(18).
   01 WS-START-OFFSET PIC 9(18).
   01 WS-END-OFFSET PIC 9(18).
   01 WS-INITIAL-READ-GAP-OFFSET.
       05 WS-GAP-START-OFFSET PIC 9(18).
       05 WS-GAP-END-OFFSET PIC 9(18).
   01 WS-FETCH-OFFSET-METADATA.
       05 WS-FETCH-OFFSET PIC 9(18).
       05 WS-LOG-OFFSET-METADATA.
   01 WS-STATE-EPOCH PIC 9(9).
   01 WS-PARTITION-STATE PIC X.
       88 WS-STATE-EMPTY VALUE 'E'.
       88 WS-STATE-INITIALIZING VALUE 'I'.
       88 WS-STATE-ACTIVE VALUE 'A'.
       88 WS-STATE-FAILED VALUE 'F'.
       88 WS-STATE-FENCED VALUE 'N'.

PROCEDURE DIVISION.

    PERFORM MAY-BE-INITIALIZE.

    PERFORM NEXT-FETCH-OFFSET.

    PERFORM ACQUIRE.

    PERFORM ACKNOWLEDGE.

    PERFORM RELEASE-ACQUIRED-RECORDS.

    PERFORM UPDATE-CACHE-AND-OFFSETS.

    PERFORM CAN-ACQUIRE-RECORDS.

    PERFORM MAYBE-ACQUIRE-FETCH-LOCK.

    PERFORM RELEASE-FETCH-LOCK.

    PERFORM MARK-FENCED.

    PERFORM LISTENER.

    PERFORM LEADER-EPOCH.

    PERFORM IS-STATE-NOT-ACTIVE.

    PERFORM EMPTY-TO-INITIAL-STATE.

    PERFORM IS-INITIALIZED-OR-THROW-EXCEPTION.

    PERFORM UPDATE-READ-GAP-FETCH-OFFSET.

    PERFORM ACQUIRE-NEW-BATCH-RECORDS.

    PERFORM ACQUIRE-SUBSET-BATCH-RECORDS.

    PERFORM CHECK-FOR-FULL-MATCH.

    PERFORM CHECK-FOR-START-OFFSET-WITHIN-BATCH.

    PERFORM FETCH-RECORD-STATE-MAP-FOR-ACKNOWLEDGEMENT-BATCH.

    PERFORM FETCH-SUB-MAP-FOR-ACKNOWLEDGEMENT-BATCH.

    PERFORM ACKNOWLEDGE-BATCH-RECORDS.

    PERFORM ACKNOWLEDGE-PER-OFFSET-BATCH-RECORDS.

    PERFORM ACKNOWLEDGE-COMPLETE-BATCH.

    PERFORM ROLLBACK-OR-PROCESS-STATE-UPDATES.

    PERFORM UPDATE-CACHED-STATE-AND-OFFSETS.

    PERFORM IS-INITIAL-READ-GAP-OFFSET-WINDOW-ACTIVE.

    PERFORM IS-RECORD-STATE-ACKNOWLEDGED.

    PERFORM FIND-LAST-OFFSET-ACKNOWLEDGED.

    PERFORM LAST-OFFSET-FROM-BATCH-WITH-REQUEST-OFFSET.

    PERFORM WRITE-SHARE-GROUP-STATE.

    PERFORM SCHEDULE-ACQUISITION-LOCK-TIMEOUT.

    PERFORM SCHEDULE-ACQUISITION-LOCK-TIMEOUT-WITH-DURATION.

    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT.

    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-COMPLETE-BATCH.

    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-PER-OFFSET-BATCH.

    PERFORM START-OFFSET-DURING-INITIALIZATION.

    PERFORM CACHED-STATE.

    PERFORM FIND-NEXT-FETCH-OFFSET.

    PERFORM SET-FIND-NEXT-FETCH-OFFSET.

    PERFORM START-OFFSET.

    PERFORM END-OFFSET.

    PERFORM STATE-EPOCH.

    PERFORM TIMER.

    PERFORM INITIAL-READ-GAP-OFFSET.

    PERFORM ACQUISITION-LOCK-TIMER-TASK.

    PERFORM IN-FLIGHT-BATCH.

    PERFORM IN-FLIGHT-STATE.

    PERFORM OFFSET-METADATA.

    STOP RUN.

MAY-BE-INITIALIZE.
    PERFORM IS-INITIALIZED-OR-THROW-EXCEPTION.
    PERFORM EMPTY-TO-INITIAL-STATE.
    PERFORM CALL PERSISTER TO READ STATE.

NEXT-FETCH-OFFSET.
    PERFORM IS-STATE-NOT-ACTIVE.
    PERFORM FIND-NEXT-FETCH-OFFSET.

ACQUIRE.
    PERFORM IS-STATE-NOT-ACTIVE.
    PERFORM CHECK-FOR-FULL-MATCH.
    PERFORM ACQUIRE-SUBSET-BATCH-RECORDS.
    PERFORM ACQUIRE-NEW-BATCH-RECORDS.
    PERFORM UPDATE-READ-GAP-FETCH-OFFSET.

ACKNOWLEDGE.
    PERFORM FETCH-RECORD-STATE-MAP-FOR-ACKNOWLEDGEMENT-BATCH.
    PERFORM FETCH-SUB-MAP-FOR-ACKNOWLEDGEMENT-BATCH.
    PERFORM ACKNOWLEDGE-BATCH-RECORDS.
    PERFORM ACKNOWLEDGE-PER-OFFSET-BATCH-RECORDS.
    PERFORM ACKNOWLEDGE-COMPLETE-BATCH.
    PERFORM ROLLBACK-OR-PROCESS-STATE-UPDATES.

RELEASE-ACQUIRED-RECORDS.
    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-COMPLETE-BATCH.
    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-PER-OFFSET-BATCH.
    PERFORM ROLLBACK-OR-PROCESS-STATE-UPDATES.

UPDATE-CACHE-AND-OFFSETS.
    PERFORM ARCHIVE-AVAILABLE-RECORDS-ON-LSO-MOVEMENT.

CAN-ACQUIRE-RECORDS.
    PERFORM IS-STATE-NOT-ACTIVE.
    PERFORM FIND-NEXT-FETCH-OFFSET.
    PERFORM CACHED-STATE.

MAYBE-ACQUIRE-FETCH-LOCK.
    PERFORM IS-STATE-NOT-ACTIVE.
    CALL ATOMIC-BOOL-COMPARE-AND-SET TO TRY ACQUIRE FETCH-LOCK.

RELEASE-FETCH-LOCK.
    MOVE FALSE TO FETCH-LOCK.

MARK-FENCED.
    MOVE 'N' TO WS-PARTITION-STATE.

LISTENER.
    MOVE WS-SHARE-PARTITION-LISTENER TO RETURN-CODE.

LEADER-EPOCH.
    MOVE WS-LEADER-EPOCH TO RETURN-CODE.

IS-STATE-NOT-ACTIVE.
    IF NOT WS-STATE-ACTIVE THEN
        RETURN FUNCTION RETURN-CODE
    END-IF.

EMPTY-TO-INITIAL-STATE.
    MOVE 'I' TO WS-PARTITION-STATE.
    RETURN FUNCTION RETURN-CODE.

IS-INITIALIZED-OR-THROW-EXCEPTION.
    EVALUATE WS-PARTITION-STATE
        WHEN 'A' THEN
            RETURN FUNCTION RETURN-CODE
        WHEN 'F' THEN
            RAISE EXCEPTION "SHARE PARTITION FAILED TO LOAD"
        WHEN 'I' THEN
            RAISE EXCEPTION "SHARE PARTITION IS ALREADY INITIALIZING"
        WHEN 'N' THEN
            RAISE EXCEPTION "SHARE PARTITION IS FENCED"
        WHEN 'E' THEN
            MOVE FALSE TO RETURN-CODE
    END-EVALUATE.

UPDATE-READ-GAP-FETCH-OFFSET.
    PERFORM IS-INITIAL-READ-GAP-OFFSET-WINDOW-ACTIVE.
    MOVE WS-GAP-END-OFFSET TO WS-GAP-START-OFFSET.

ACQUIRE-NEW-BATCH-RECORDS.
    PERFORM CREATE-BATCHES.
    PERFORM UPDATE-CACHED-STATE-AND-OFFSETS.

ACQUIRE-SUBSET-BATCH-RECORDS.
    MOVE 0 TO RETURN-CODE.
    PERFORM LOOP THROUGH OFFSET-STATE-ENTRIES
        PERFORM TRY-UPDATE-OFFSET-STATE
        ADD 1 TO RETURN-CODE
    END-PERFORM.
    RETURN RETURN-CODE.

CHECK-FOR-FULL-MATCH.
    IF WS-FIRST-OFFSET >= WS-REQUEST-FIRST-OFFSET
        AND WS-LAST-OFFSET <= WS-REQUEST-LAST-OFFSET THEN
        MOVE TRUE TO RETURN-CODE
    ELSE
        MOVE FALSE TO RETURN-CODE
    END-IF.

CHECK-FOR-START-OFFSET-WITHIN-BATCH.
    IF WS-BATCH-FIRST-OFFSET < WS-START-OFFSET
        AND WS-BATCH-LAST-OFFSET >= WS-START-OFFSET THEN
        MOVE TRUE TO RETURN-CODE
    ELSE
        MOVE FALSE TO RETURN-CODE
    END-IF.

FETCH-RECORD-STATE-MAP-FOR-ACKNOWLEDGEMENT-BATCH.
    MOVE FUNCTION FETCH-RECORD-STATE(WS-ACKNOWLEDGE-TYPE) TO RETURN-CODE.

FETCH-SUB-MAP-FOR-ACKNOWLEDGEMENT-BATCH.
    MOVE FUNCTION FETCH-SUB-MAP-FOR-ACKNOWLEDGEMENT-BATCH(WS-FIRST-OFFSET, WS-LAST-OFFSET) TO RETURN-CODE.

ACKNOWLEDGE-BATCH-RECORDS.
    PERFORM VALIDATE-ACKNOWLEDGEMENT-BATCH-MEMBER-ID.
    PERFORM ACKNOWLEDGE-PER-OFFSET-BATCH-RECORDS.
    PERFORM ACKNOWLEDGE-COMPLETE-BATCH.
    RETURN RETURN-CODE.

ACKNOWLEDGE-PER-OFFSET-BATCH-RECORDS.
    PERFORM LOOP THROUGH OFFSET-STATE-ENTRIES
        PERFORM TRY-ACKNOWLEDGE-OFFSET-RECORDS
    END-PERFORM.

ACKNOWLEDGE-COMPLETE-BATCH.
    PERFORM TRY-ACKNOWLEDGE-COMPLETE-BATCH.

ROLLBACK-OR-PROCESS-STATE-UPDATES.
    PERFORM WRITE-SHARE-GROUP-STATE.
    PERFORM UPDATE-CACHED-STATE-AND-OFFSETS.

UPDATE-CACHED-STATE-AND-OFFSETS.
    PERFORM ARCHIVE-AVAILABLE-RECORDS-ON-LSO-MOVEMENT.
    PERFORM FIND-LAST-OFFSET-ACKNOWLEDGED.
    PERFORM CACHED-STATE-CLEANUP.

IS-INITIAL-READ-GAP-OFFSET-WINDOW-ACTIVE.
    IF WS-INITIAL-READ-GAP-OFFSET NOT EQUAL ZERO
        AND WS-GAP-END-OFFSET = WS-END-OFFSET THEN
        MOVE TRUE TO RETURN-CODE
    ELSE
        MOVE FALSE TO RETURN-CODE
    END-IF.

IS-RECORD-STATE-ACKNOWLEDGED.
    IF WS-RECORD-STATE = 'A' OR WS-RECORD-STATE = 'R' THEN
        MOVE TRUE TO RETURN-CODE
    ELSE
        MOVE FALSE TO RETURN-CODE
    END-IF.

FIND-LAST-OFFSET-ACKNOWLEDGED.
    MOVE -1 TO RETURN-CODE.
    PERFORM LOOP THROUGH CACHED-STATE-ENTRIES
        PERFORM CHECK-RECORD-STATE-IN-BATCH
        IF LAST-OFFSET-ACKNOWLEDGED > RETURN-CODE THEN
            MOVE LAST-OFFSET-ACKNOWLEDGED TO RETURN-CODE
        END-IF
    END-PERFORM.

LAST-OFFSET-FROM-BATCH-WITH-REQUEST-OFFSET.
    PERFORM LOOP THROUGH BATCHES
        IF WS-REQUEST-OFFSET >= BATCH-BASE-OFFSET THEN
            MOVE BATCH-LAST-OFFSET TO RETURN-CODE
        END-IF
    END-PERFORM.
    IF RETURN-CODE < WS-REQUEST-OFFSET THEN
        MOVE WS-REQUEST-OFFSET TO RETURN-CODE
    END-IF.

WRITE-SHARE-GROUP-STATE.
    CALL PERSISTER TO WRITE STATE.

SCHEDULE-ACQUISITION-LOCK-TIMEOUT.
    PERFORM SCHEDULE-ACQUISITION-LOCK-TIMEOUT-WITH-DURATION.

SCHEDULE-ACQUISITION-LOCK-TIMEOUT-WITH-DURATION.
    CREATE ACQUISITION-LOCK-TIMER-TASK.
    CALL TIMER TO ADD ACQUISITION-LOCK-TIMER-TASK.
    MOVE ACQUISITION-LOCK-TIMER-TASK TO RETURN-CODE.

RELEASE-ACQUISITION-LOCK-ON-TIMEOUT.
    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-COMPLETE-BATCH.
    PERFORM RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-PER-OFFSET-BATCH.
    PERFORM WRITE-SHARE-GROUP-STATE.
    PERFORM UPDATE-CACHED-STATE-AND-OFFSETS.

RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-COMPLETE-BATCH.
    PERFORM TRY-RELEASE-COMPLETE-BATCH-ON-TIMEOUT.

RELEASE-ACQUISITION-LOCK-ON-TIMEOUT-FOR-PER-OFFSET-BATCH.
    PERFORM LOOP THROUGH OFFSET-STATE-ENTRIES
        PERFORM TRY-RELEASE-OFFSET-ON-TIMEOUT
    END-PERFORM.

START-OFFSET-DURING-INITIALIZATION.
    PERFORM CALL REPLICA-MANAGER TO GET OFFSET-FOR-LATEST-TIMESTAMP.
    PERFORM CALL REPLICA-MANAGER TO GET OFFSET-FOR-EARLIEST-TIMESTAMP.
    PERFORM CALL REPLICA-MANAGER TO GET OFFSET-FOR-TIMESTAMP.
    MOVE RETURN-CODE TO WS-START-OFFSET.

CACHED-STATE.
    MOVE WS-CACHED-STATE TO RETURN-CODE.

FIND-NEXT-FETCH-OFFSET.
    PERFORM IS-STATE-NOT-ACTIVE.
    PERFORM CACHED-STATE.
    MOVE WS-END-OFFSET TO RETURN-CODE.

SET-FIND-NEXT-FETCH-OFFSET.
    MOVE ARG TO FIND-NEXT-FETCH-OFFSET.

START-OFFSET.
    MOVE WS-START-OFFSET TO RETURN-CODE.

END-OFFSET.
    MOVE WS-END-OFFSET TO RETURN-CODE.

STATE-EPOCH.
    MOVE WS-STATE-EPOCH TO RETURN-CODE.

TIMER.
    MOVE WS-TIMER TO RETURN-CODE.

INITIAL-READ-GAP-OFFSET.
    MOVE WS-INITIAL-READ-GAP-OFFSET TO RETURN-CODE.

ACQUISITION-LOCK-TIMER-TASK.
    MOVE WS-EXPIRATION-MS TO RETURN-CODE.
    MOVE WS-MEMBER-ID TO RETURN-CODE.
    MOVE WS-FIRST-OFFSET TO RETURN-CODE.
    MOVE WS-LAST-OFFSET TO RETURN-CODE.
    CALL RELEASE-ACQUISITION-LOCK-