IDENTIFICATION DIVISION.
PROGRAM-ID. REPLICAALTERLOGDIRSTHREAD.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY REPLICAALTERLOGDIRSTHREADCOPY.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-PROMOTIONSTATE.
   05 WS-REASSIGNMENTSTATE PIC X(10).
   05 WS-TOPICID PIC X(36).
   05 WS-ORIGINALDIR PIC X(36).
01 WS-TOPICPARTITION.
   05 WS-TOPIC PIC X(100).
   05 WS-PARTITION PIC 9(9).
01 WS-LOGAPPENDINFO PIC X(1000).
01 WS-RECORDS PIC X(32767).
01 WS-HIGHWATERMARK PIC 9(18).
01 WS-LOGSTARTOFFSET PIC 9(18).
01 WS-LOGENDOFFSET PIC 9(18).
01 WS-OFFSETANDEPOCH.
   05 WS-OFFSET PIC 9(18).
   05 WS-EPOCH PIC 9(9).

PROCEDURE DIVISION.

MAIN-PROCEDURE.

    PERFORM PROCESS-PARTITIONDATA.
    PERFORM REMOVE-PARTITIONS.
    PERFORM ADD-PARTITIONS.
    PERFORM TRUNCATE.
    PERFORM TRUNCATEFOLLY-ANDSTARTAT.

PROCESS-PARTITIONDATA.
    MOVE TOPICPARTITION OF PARTITIONDATA TO WS-TOPICPARTITION.
    MOVE FETCHOFFSET TO WS-LOGENDOFFSET.
    MOVE PARTITIONDATA TO WS-RECORDS.
    CALL "APPENDRECORDSTOFOLOWERORFUTUREREPLICA" USING WS-TOPICPARTITION, WS-RECORDS, TRUE.
    MOVE HIGHWATERMARK OF PARTITIONDATA TO WS-HIGHWATERMARK.
    CALL "MAYBEINCREMENT-LOGSTARTOFFSET" USING WS-TOPICPARTITION, WS-LOGSTARTOFFSET, LOGSTARTOFSSETINCREMENTREASON-LEADEROFFSETINCREMENTED.
    PERFORM MAYBEPROMOTEFUTUREREPLICA.

REMOVE-PARTITIONS.
    PERFORM VARYING EACH-TOPICPARTITION IN TOPICPARTITIONS
        IF PROMOTIONSTATE-CONTAINSKEY(WS-TOPICPARTITION)
            MOVE PROMOTIONSTATE-GET(WS-TOPICPARTITION) TO WS-PROMOTIONSTATE
            IF WS-ORIGINALDIR IS NOT EMPTY AND WS-TOPICID IS NOT EMPTY AND WS-REASSIGNMENTSTATE-MAYBEINCONSISTENTMETADATA
                CALL "HANDLEASSIGNMENT" USING NEWTOPICIDPARTITION(WS-TOPICID, WS-PARTITION), WS-ORIGINALDIR, "Reverting reassignment for canceled future replica", NULL
            END-IF
            CALL "PROMOTIONSTATE-REMOVE" USING WS-TOPICPARTITION
        END-IF
    END-PERFORM.
    CALL "REMOVEPARTITIONS" USING TOPICPARTITIONS.

ADD-PARTITIONS.
    LOCK PARTITIONMAPLOCK.
    PERFORM VARYING EACH-STATE IN INITIALFETCHSTATES
        IF REPLICAMGR-FUTURELOGEXISTS(TOPICPARTITION OF EACH-STATE)
            MOVE TOPICID OF EACH-STATE TO WS-TOPICID
            MOVE LOGDIRECTORYID OF WS-TOPICPARTITION TO WS-ORIGINALDIR
            MOVE PROMOTIONSTATE(WS-REASSIGNMENTSTATE-NONE, WS-TOPICID, WS-ORIGINALDIR) TO WS-PROMOTIONSTATE
            CALL "PROMOTIONSTATE-PUT" USING WS-TOPICPARTITION, WS-PROMOTIONSTATE
        END-IF
    END-PERFORM.
    CALL "ADDPARTITIONS" USING INITIALFETCHSTATES.
    UNLOCK PARTITIONMAPLOCK.

TRUNCATE.
    MOVE TOPICPARTITION TO WS-TOPICPARTITION.
    MOVE TRUNCATIONSTATE-OFFSET TO WS-OFFSET.
    CALL "PARTITION-TRUNCATETO" USING WS-TOPICPARTITION, WS-OFFSET, TRUE.

TRUNCATEFOLLY-ANDSTARTAT.
    MOVE TOPICPARTITION TO WS-TOPICPARTITION.
    MOVE OFFSET TO WS-OFFSET.
    CALL "PARTITION-TRUNCATEFULLLYANDSTARTAT" USING WS-TOPICPARTITION, WS-OFFSET, TRUE.

MAYBEPROMOTEFUTUREREPLICA.
    MOVE TOPICPARTITION TO WS-TOPICPARTITION.
    CALL "PARTITION-TOPICID" USING WS-TOPICPARTITION, WS-TOPICID.
    IF WS-TOPICID IS EMPTY
        RAISE EXCEPTION "Topic {WS-TOPICPARTITION-TOPIC()} does not have an ID."
    END-IF.
    PERFORM VARYING EACH-STATE IN PROMOTIONSTATE-GETSTATES(WS-TOPICPARTITION)
        EVALUATE EACH-STATE
            WHEN WS-REASSIGNMENTSTATE-NONE
                CALL "PARTITION-RUNCALLBACKIFFUTUREREPICACAUGHTUP" USING WS-TOPICPARTITION, LAMBDA-FUNC
                MOVE PARTITION-FUTUREREPLICADIRECTORYID(WS-TOPICPARTITION) TO WS-ORIGINALDIR
                CALL "HANDLEASSIGNMENT" USING NEWTOPICIDPARTITION(WS-TOPICID, WS-PARTITION-NUMBER), WS-ORIGINALDIR, "Future replica promotion", LAMBDA-FUNC-UPDATEREASSIGNMENTSTATE(WS-TOPICPARTITION, WS-REASSIGNMENTSTATE-ACCEPTED)
                CALL "UPDATEREASSIGNMENTSTATE" USING WS-TOPICPARTITION, WS-REASSIGNMENTSTATE-QUEUED
            WHEN WS-REASSIGNMENTSTATE-ACCEPTED
                IF PARTITION-MAYBEREPLACEURRENTWITHFUTUREREPLICA(WS-TOPICPARTITION)
                    CALL "UPDATEREASSIGNMENTSTATE" USING WS-TOPICPARTITION, WS-REASSIGNMENTSTATE-EFFECTIVE
                    CALL "REMOVEPARTITIONS" USING SET(WS-TOPICPARTITION)
                END-IF
            WHEN WS-REASSIGNMENTSTATE-QUEUED
                LOG "Waiting for AssignReplicasToDirsRequest to succeed before promoting the future replica."
            WHEN WS-REASSIGNMENTSTATE-EFFECTIVE
                RAISE EXCEPTION "BUG: trying to promote a future replica twice"
        END-EVALUATE
    END-PERFORM.

STOP RUN.