IDENTIFICATION DIVISION.
PROGRAM-ID. DELAYED-REMOTE-LIST-OFFSETS.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "kafka-utils.cpy".
    COPY "kafka-common-errors.cpy".
    COPY "kafka-metrics-group.cpy".
    COPY "kafka-delayed-operation.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-DELAYED-REMOTE-LIST-OFFSETS.
    05 WS-DELAY-MS                     PIC 9(18) COMP-3.
    05 WS-VERSION                      PIC 9(9) COMP.
    05 WS-STATUS-BY-PARTITION          USAGE IS POINTER.
    05 WS-REPLICA-MANAGER              USAGE IS POINTER.
    05 WS-RESPONSE-CALLBACK            USAGE IS POINTER.

01 WS-DELAYED-REMOTE-LIST-OFFSETS-METRICS.
    05 WS-AGGREGATE-EXPIRATION-METER   USAGE IS POINTER.
    05 WS-PARTITION-EXPIRATION-METERS  USAGE IS POINTER.

PROCEDURE DIVISION.

MAIN-PROCEDURE.
    PERFORM INIT-DELAYED-REMOTE-LIST-OFFSETS.
    PERFORM HANDLE-EXPIRATION.
    PERFORM HANDLE-COMPLETION.
    PERFORM HANDLE-TRY-COMPLETE.

INIT-DELAYED-REMOTE-LIST-OFFSETS.
    MOVE FUNCTION LENGTH(WS-DELAYED-REMOTE-LIST-OFFSETS) TO WS-DELAY-MS.
    MOVE FUNCTION LENGTH(WS-VERSION) TO WS-VERSION.
    MOVE FUNCTION LENGTH(WS-STATUS-BY-PARTITION) TO WS-STATUS-BY-PARTITION.
    MOVE FUNCTION LENGTH(WS-REPLICA-MANAGER) TO WS-REPLICA-MANAGER.
    MOVE FUNCTION LENGTH(WS-RESPONSE-CALLBACK) TO WS-RESPONSE-CALLBACK.

HANDLE-EXPIRATION.
    PERFORM VARYING WS-STATUS-BY-PARTITION-IX FROM 1 BY 1 UNTIL WS-STATUS-BY-PARTITION-IX > FUNCTION LENGTH(WS-STATUS-BY-PARTITION)
        IF NOT WS-STATUS-COMPLETED
            DISPLAY "Expiring list offset request for partition " WS-TOPICPARTITION " with status " WS-STATUS
            PERFORM CANCEL-FUTURE-HOLDER
            PERFORM RECORD-EXPIRATION
        END-IF
    END-PERFORM.

HANDLE-COMPLETION.
    PERFORM VARYING WS-STATUS-BY-PARTITION-IX FROM 1 BY 1 UNTIL WS-STATUS-BY-PARTITION-IX > FUNCTION LENGTH(WS-STATUS-BY-PARTITION)
        MOVE WS-TOPICPARTITION TO WS-RESPONSE-TOPIC
        PERFORM BUILD-RESPONSE-TOPIC
    END-PERFORM.
    PERFORM INVOKE-RESPONSE-CALLBACK.

HANDLE-TRY-COMPLETE.
    MOVE TRUE TO WS-COMPLETABLE.
    PERFORM VARYING WS-STATUS-BY-PARTITION-IX FROM 1 BY 1 UNTIL WS-STATUS-BY-PARTITION-IX > FUNCTION LENGTH(WS-STATUS-BY-PARTITION)
        PERFORM CHECK-PARTITION-COMPLETABLE
        IF NOT WS-COMPLETABLE
            RETURN
        END-IF
    END-PERFORM.
    PERFORM FORCE-COMPLETE.

CANCEL-FUTURE-HOLDER.
    CALL "futureHolder.jobFuture.cancel" USING TRUE.
    CALL "futureHolder.taskFuture.complete" USING NEW-FILERECORSERROR.

RECORD-EXPIRATION.
    CALL "WS-AGGREGATE-EXPIRATION-METER.mark".
    CALL "WS-PARTITION-EXPIRATION-METERS.getAndMaybePut" USING WS-TOPICPARTITION, WS-PARTITION-EXPIRATION-METER.
    CALL "WS-PARTITION-EXPIRATION-METER.mark".

BUILD-RESPONSE-TOPIC.
    MOVE WS-TOPIC TO NEW-LISTOFFSETSTOPICRESPONSE.TOPIC.
    PERFORM VARYING WS-STATUS-BY-PARTITION-IX FROM 1 BY 1 UNTIL WS-STATUS-BY-PARTITION-IX > FUNCTION LENGTH(WS-STATUS-BY-PARTITION)
        IF WS-TOPICPARTITION-EQ-CURRENT
            PERFORM BUILD-RESPONSE-PARTITION
            MOVE NEW-LISTOFFSETSPARTITIONRESPONSE TO NEW-LISTOFFSETSTOPICRESPONSE.PARTITIONS(WS-INDEX)
        END-IF
    END-PERFORM.
    MOVE NEW-LISTOFFSETSTOPICRESPONSE TO WS-RESPONSE-TOPICS(WS-INDEX).

BUILD-RESPONSE-PARTITION.
    MOVE WS-PARTITION-INDEX TO NEW-LISTOFFSETSPARTITIONRESPONSE.PARTITIONINDEX.
    IF WS-ERROR-CODE-EQ-NONE
        MOVE WS-TIMESTAMP TO NEW-LISTOFFSETSPARTITIONRESPONSE.TIMESTAMP
        MOVE WS-OFFSET TO NEW-LISTOFFSETSPARTITIONRESPONSE.OFFSET
        IF WS-LEADEREPOCH-PRESENT AND WS-VERSION >= 4
            MOVE WS-LEADEREPOCH TO NEW-LISTOFFSETSPARTITIONRESPONSE.LEADEREPOCH
        END-IF
    ELSE
        MOVE WS-ERROR-CODE TO NEW-LISTOFFSETSPARTITIONRESPONSE.ERRORCODE
    END-IF.

INVOKE-RESPONSE-CALLBACK.
    CALL "WS-RESPONSE-CALLBACK" USING WS-RESPONSE-TOPICS.

CHECK-PARTITION-COMPLETABLE.
    PERFORM GET-PARTITION.
    IF FUNCTION LENGTH(WS-FUTURE-HOLDER-OPT) > 0
        IF WS-TASK-FUTURE-DONE
            PERFORM HANDLE-TASK-FUTURE
            MOVE TRUE TO WS-COMPLETABLE
        ELSE
            MOVE FALSE TO WS-COMPLETABLE
        END-IF
    ELSE
        MOVE TRUE TO WS-COMPLETED
        MOVE TRUE TO WS-COMPLETABLE
    END-IF.

GET-PARTITION.
    CALL "WS-REPLICA-MANAGER.getPartitionOrException" USING WS-TOPICPARTITION
        ON EXCEPTION
            PERFORM HANDLE-API-EXCEPTION.

HANDLE-API-EXCEPTION.
    IF FUNCTION LENGTH(WS-FUTURE-HOLDER-OPT) > 0
        CALL "futureHolder.jobFuture.cancel" USING FALSE.
        CALL "futureHolder.taskFuture.complete" USING NEW-FILERECORSERROR.
    END-IF.

HANDLE-TASK-FUTURE.
    MOVE WS-TASK-FUTURE-RESULT TO WS-RESPONSE.
    IF WS-TASK-FUTURE-HAS-EXCEPTION
        PERFORM BUILD-ERROR-RESPONSE USING WS-EXCEPTION, WS-PARTITION-INDEX
    ELSE IF NOT WS-TASK-FUTURE-HAS-TIMESTAMP-AND-OFFSET
        PERFORM BUILD-ERROR-RESPONSE USING WS-OFFSETS-ERROR, WS-PARTITION-INDEX
    ELSE
        PERFORM BUILD-SUCCESSFUL-RESPONSE
    END-IF.
    MOVE WS-RESPONSE TO WS-RESPONSE-OPT.
    MOVE TRUE TO WS-COMPLETED.

BUILD-ERROR-RESPONSE.
    MOVE WS-PARTITION-INDEX TO NEW-LISTOFFSETSPARTITIONRESPONSE.PARTITIONINDEX.
    MOVE WS-ERROR-CODE TO NEW-LISTOFFSETSPARTITIONRESPONSE.ERRORCODE.
    MOVE LISTOFFSETSRESPONSE-UNKNOWN-TIMESTAMP TO NEW-LISTOFFSETSPARTITIONRESPONSE.TIMESTAMP.
    MOVE LISTOFFSETSRESPONSE-UNKNOWN-OFFSET TO NEW-LISTOFFSETSPARTITIONRESPONSE.OFFSET.
    MOVE NEW-LISTOFFSETSPARTITIONRESPONSE TO WS-RESPONSE.

BUILD-SUCCESSFUL-RESPONSE.
    MOVE WS-PARTITION-INDEX TO NEW-LISTOFFSETSPARTITIONRESPONSE.PARTITIONINDEX.
    MOVE ERRORS-NONE-CODE TO NEW-LISTOFFSETSPARTITIONRESPONSE.ERRORCODE.
    MOVE WS-TIMESTAMP TO NEW-LISTOFFSETSPARTITIONRESPONSE.TIMESTAMP.
    MOVE WS-OFFSET TO NEW-LISTOFFSETSPARTITIONRESPONSE.OFFSET.
    IF WS-LEADEREPOCH-PRESENT AND WS-VERSION >= 4
        MOVE WS-LEADEREPOCH TO NEW-LISTOFFSETSPARTITIONRESPONSE.LEADEREPOCH
    END-IF.
    MOVE NEW-LISTOFFSETSPARTITIONRESPONSE TO WS-RESPONSE.