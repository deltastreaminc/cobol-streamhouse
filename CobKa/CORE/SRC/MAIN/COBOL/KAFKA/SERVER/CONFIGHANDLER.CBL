IDENTIFICATION DIVISION.
PROGRAM-ID. TOPIC-CONFIG-HANDLER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "KAFKA-CONFIG.cpy".
    COPY "QUOTA-MANAGERS.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 TOPIC-NAME PIC X(50).
01 TOPIC-CONFIG TYPEDEF PROPERTIES.
01 LOG-MANAGER TYPEDEF REPLICA-MANAGER.
01 REPLICA-MANAGER TYPEDEF REPLICA-MANAGER.
01 WAS-REMOTE-LOG-ENABLED PIC X VALUE 'N'.
01 WAS-COPY-DISABLED PIC X VALUE 'N'.
01 IS-REMOTE-LOG-ENABLED PIC X VALUE 'N'.
01 IS-COPY-DISABLED PIC X VALUE 'N'.
01 IS-DELETE-ON-DISABLE PIC X VALUE 'N'.
01 LEADER-PARTITIONS TYPEDEF JAVA-UTIL-LIST.
01 FOLLOWER-PARTITIONS TYPEDEF JAVA-UTIL-LIST.
01 STOP-PARTITIONS TYPEDEF JAVA-UTIL-HASHSET.
01 TOPIC-IDS TYPEDEF JAVA-UTIL-MAP.

PROCEDURE DIVISION.

UPDATE-LOG-CONFIG.
    PERFORM GET-LOGS
    PERFORM UPDATE-REMOTE-LOG-COMPONENTS.

GET-LOGS.
    MOVE REPLICAMANAGER-LOGMANAGER TO LOG-MANAGER
    MOVE REPLICAMANAGER TO REPLICA-MANAGER
    MOVE LOG-MANAGER:LOGSBYTOPIC(TOPIC-NAME) TO LOGS
    MOVE FUNCTION TRUE TO WAS-REMOTE-LOG-ENABLED
    MOVE FUNCTION TRUE TO WAS-COPY-DISABLED
    PERFORM VARYING LOG-ENTRY IN LOGS
        IF LOG-ENTRY:REMOTELOGENABLEDQ
            MOVE FUNCTION TRUE TO WAS-REMOTE-LOG-ENABLED
        IF LOG-ENTRY:CONFIG:REMOTELOGCOPYISDIBLEDQ
            MOVE FUNCTION TRUE TO WAS-COPY-DISABLED.

UPDATE-REMOTE-LOG-COMPONENTS.
    MOVE FUNCTION FALSE TO IS-REMOTE-LOG-ENABLED
    MOVE FUNCTION FALSE TO IS-COPY-DISABLED
    MOVE FUNCTION FALSE TO IS-DELETE-ON-DISABLE
    PERFORM VARYING LOG-ENTRY IN LOGS
        IF LOG-ENTRY:REMOTELOGENABLEDQ
            MOVE FUNCTION TRUE TO IS-REMOTE-LOG-ENABLED
        IF LOG-ENTRY:CONFIG:REMOTELOGCOPYISDIBLEDQ  
            MOVE FUNCTION TRUE TO IS-COPY-DISABLED
        IF LOG-ENTRY:CONFIG:REMOTELOGDELETEONDISABLEQ
            MOVE FUNCTION TRUE TO IS-DELETE-ON-DISABLE
    PERFORM GET-LEADER-FOLLOWER-PARTITIONS
    IF IS-REMOTE-LOG-ENABLED AND (NOT WAS-REMOTE-LOG-ENABLED OR (WAS-COPY-DISABLED AND NOT IS-COPY-DISABLED))
        MOVE FUNCTION JAVA-COLLECTIONS:SINGLETON-MAP(TOPIC-NAME, REPLICAMANAGER-METADATACACHE:GETTOPICID(TOPIC-NAME)) TO TOPIC-IDS
        IF REPLICAMANAGER-REMOTELOGMANAGER IS NOT NULL
            CALL REPLICAMANAGER-REMOTELOGMANAGER:ONLEADERSHIPCHANGE(LEADER-PARTITIONS, FOLLOWER-PARTITIONS, TOPIC-IDS)
    IF IS-REMOTE-LOG-ENABLED AND NOT WAS-COPY-DISABLED AND IS-COPY-DISABLED
        IF REPLICAMANAGER-REMOTELOGMANAGER IS NOT NULL
            CALL REPLICAMANAGER-REMOTELOGMANAGER:STOPLEADERCOPYRLMTASKS(LEADER-PARTITIONS)
    IF WAS-REMOTE-LOG-ENABLED AND NOT IS-REMOTE-LOG-ENABLED AND IS-DELETE-ON-DISABLE
        PERFORM VARYING LOG-ENTRY IN LOGS
            WHERE LEADER-PARTITIONS-CONTAINS(LOG-ENTRY:TOPICPARTITION)
                CALL LOG-ENTRY:MAYBEINCREASELOGSTARTOFFSET(LOG-ENTRY:LOCALLOGSTARTOFFSET, LOG-START-OFFSET-INCREMENT-REASON-SEGMENTDELETION)
        MOVE NEW JAVA-UTIL-HASHSET TO STOP-PARTITIONS
        PERFORM VARYING PARTITION IN LEADER-PARTITIONS
            MOVE NEW STOPPARTITION(PARTITION:TOPICPARTITION, FALSE, TRUE, TRUE) TO STOP-PARTITIONS:ADD
        PERFORM VARYING PARTITION IN FOLLOWER-PARTITIONS
            MOVE NEW STOPPARTITION(PARTITION:TOPICPARTITION, FALSE, FALSE, TRUE) TO STOP-PARTITIONS:ADD
        IF REPLICAMANAGER-REMOTELOGMANAGER IS NOT NULL
            CALL REPLICAMANAGER-REMOTELOGMANAGER:STOPPARTITIONS(STOP-PARTITIONS, NULL).

GET-LEADER-FOLLOWER-PARTITIONS.
    MOVE FUNCTION REPLICAMANAGER:ONLINEPARTITION-FILTERLEADER TO LEADER-PARTITIONS
    MOVE FUNCTION REPLICAMANAGER:ONLINEPARTITION-FILTERFOLLOWER TO FOLLOWER-PARTITIONS.

PROCESS-CONFIG-CHANGES.
    CALL UPDATE-LOG-CONFIG(TOPIC-NAME, TOPIC-CONFIG)
    CALL UPDATE-THROTTLED-LIST(QUOTA-CONFIG:LEADER-REPLICATION-THROTTLED-REPLICAS-CONFIG, QUOTAS-LEADER)
    CALL UPDATE-THROTTLED-LIST(QUOTA-CONFIG:FOLLOWER-REPLICATION-THROTTLED-REPLICAS-CONFIG, QUOTAS-FOLLOWER).

UPDATE-THROTTLED-LIST.
    IF TOPIC-CONFIG:CONTAINSKEY(WS1) AND TOPIC-CONFIG:GETPROPERTY(WS1) IS NOT EMPTY
        MOVE CALL PARSE-THROTTLED-PARTITIONS(TOPIC-CONFIG, BROKERCONFIG-BROKERID, WS1) TO PARTITIONS
        CALL QUOTAMANAGER:MARKTHROTTLED(TOPIC-NAME, FUNCTION JAVA-UTIL-COLLECTIONS:LIST(PARTITIONS))
        DISPLAY "Setting " WS1 " on broker " BROKERCONFIG-BROKERID " for topic: " TOPIC-NAME " and partitions " PARTITIONS
    ELSE
        CALL QUOTAMANAGER:REMOVETHROTTLE(TOPIC-NAME)
        DISPLAY "Removing " WS1 " from broker " BROKERCONFIG-BROKERID " for topic " TOPIC-NAME.

PARSE-THROTTLED-PARTITIONS.
    MOVE TRIM(TOPIC-CONFIG:GET(WS1)) TO CONFIG-VALUE
    CALL THROTTLEDREPLICALISTVALIDATOR:ENSUREVALIDSTRING(WS1, CONFIG-VALUE)
    IF CONFIG-VALUE = SPACES
        RETURN FUNCTION EMPTY-SEQUENCE
    ELSE IF CONFIG-VALUE = "*"
        RETURN FUNCTION REPLICATION-QUOTA-MANAGER:ALL-REPLICAS:ASSCALA:MAP(FUNCTION INTEGER):TOSEQ
    ELSE
        MOVE FUNCTION TRIM-AND-SPLIT(CONFIG-VALUE, ",") TO PARTITIONS
        MOVE PARTITIONS:FILTERMAP(FUNCTION SPLIT-COLON):WHERE(FUNCTION(X) X(1):TOINT = BROKERCONFIG-BROKERID):MAP(FUNCTION(X) X(0):TOINT):TOSEQ
        RETURN PARTITIONS.

IDENTIFICATION DIVISION.
PROGRAM-ID. BROKER-CONFIG-HANDLER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "KAFKA-CONFIG.cpy".
    COPY "QUOTA-MANAGERS.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 BROKER-ID PIC X(50).
01 PROPERTIES TYPEDEF PROPERTIES.
01 UPDATED-DYNAMIC-BROKER-CONFIGS TYPEDEF PROPERTIES.
01 UPDATED-DYNAMIC-DEFAULT-CONFIGS TYPEDEF PROPERTIES.

PROCEDURE DIVISION.

PROCESS-CONFIG-CHANGES.
    IF BROKER-ID = SPACES
        CALL BROKERCONFIG-DYNAMICCONFIG:UPDATEDEFAULTCONFIG(PROPERTIES)
    ELSE IF BROKERCONFIG-BROKERID = FUNCTION INTEGER(BROKER-ID:TRIM)
        CALL BROKERCONFIG-DYNAMICCONFIG:UPDATEBROKERCONFIG(BROKERCONFIG-BROKERID, PROPERTIES)
    MOVE BROKERCONFIG-DYNAMICCONFIG:CURRENTDYNAMICBROKERCONFIGS TO UPDATED-DYNAMIC-BROKER-CONFIGS
    MOVE BROKERCONFIG-DYNAMICCONFIG:CURRENTDYNAMICDAFAULTCONFIGS TO UPDATED-DYNAMIC-DEFAULT-CONFIGS
    CALL UPDATE-QUOTA(QUOTA-CONFIG:LEADER-REPLICATION-THROTTLED-RATE-CONFIG, QUOTAMANAGERS-LEADER)
    CALL UPDATE-QUOTA(QUOTA-CONFIG:FOLLOWER-REPLICATION-THROTTLED-RATE-CONFIG, QUOTAMANAGERS-FOLLOWER)
    CALL UPDATE-QUOTA(QUOTA-CONFIG:REPLICA-ALTER-LOG-DIRS-IO-MAX-BYTES-PER-SECOND-CONFIG, QUOTAMANAGERS-ALTERLOGDIRS).

UPDATE-QUOTA.
    CALL GET-OR-DEFAULT(WS1) RETURNING QUOTA-VALUE
    CALL QUOTAMANAGER:UPDATEQUOTA(FUNCTION UPPER-BOUND(QUOTA-VALUE)).

GET-OR-DEFAULT.
    MOVE UPDATED-DYNAMIC-BROKER-CONFIGS:GET(WS1) TO QUOTA-VALUE
    IF QUOTA-VALUE IS NOT NUMERIC
        MOVE UPDATED-DYNAMIC-DEFAULT-CONFIGS:GET(WS1) TO QUOTA-VALUE
        IF QUOTA-VALUE IS NOT NUMERIC
            MOVE QUOTA-CONFIG:QUOTA-BYTES-PER-SECOND-DEFAULT TO QUOTA-VALUE
    RETURN QUOTA-VALUE.

IDENTIFICATION DIVISION.
PROGRAM-ID. CLIENT-METRICS-CONFIG-HANDLER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "CLIENT-METRICS-MANAGER.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 SUBSCRIPTION-GROUP-ID PIC X(50).
01 PROPERTIES TYPEDEF PROPERTIES.

PROCEDURE DIVISION.

PROCESS-CONFIG-CHANGES.
    CALL CLIENTMETRICSMANAGER:UPDATESUBSCRIPTION(SUBSCRIPTION-GROUP-ID, PROPERTIES).

IDENTIFICATION DIVISION.
PROGRAM-ID. GROUP-CONFIG-HANDLER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
REPOSITORY.
    COPY "GROUP-COORDINATOR.cpy".

DATA DIVISION.
WORKING-STORAGE SECTION.
01 GROUP-ID PIC X(50).
01 PROPERTIES TYPEDEF PROPERTIES.

PROCEDURE DIVISION.

PROCESS-CONFIG-CHANGES.
    CALL GROUPCOORDINATOR:UPDATEGROUPCONFIG(GROUP-ID, PROPERTIES).