IDENTIFICATION DIVISION.
PROGRAM-ID. SOCKET-SERVER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-MAX-QUEUED-REQUESTS PIC 9(9) VALUE 0.
01 WS-NODE-ID PIC 9(9) VALUE 0.
01 WS-STOPPED PIC X VALUE 'N'.
    88 WS-STOPPED-FLAG VALUE 'Y'.
01 WS-MEMORY-POOL-SENSOR.
   05 WS-MEMORY-POOL-DEPLETED-PERCENT-METRIC-NAME PIC X(50).
   05 WS-MEMORY-POOL-DEPLETED-TIME-METRIC-NAME PIC X(50).
01 WS-MEMORY-POOL PIC X(1) VALUE SPACE.
01 WS-DATA-PLANE-ACCEPTORS.
   05 OCCURS 1 TO 99 TIMES DEPENDING ON WS-NUM-ACCEPTORS.
      10 WS-ENDPOINT PIC X(50).
      10 WS-ACCEPTOR PIC X(50).
01 WS-NEXT-PROCESSOR-ID PIC 9(9) VALUE 0.
01 WS-CONNECTION-QUOTAS PIC X(50).
01 WS-ALL-AUTHORIZER-FUTURES-COMPLETE PIC X(1) VALUE 'N'.
    88 WS-ALL-AUTHORIZERS-COMPLETE VALUE 'Y'.

LINKAGE SECTION.
01 LS-CONFIG PIC X(1000).
01 LS-METRICS PIC X(1000).
01 LS-TIME PIC X(1000).
01 LS-CREDENTIAL-PROVIDER PIC X(1000).
01 LS-API-VERSION-MANAGER PIC X(1000).
01 LS-SOCKET-FACTORY PIC X(1000).
01 LS-CONNECTION-DISCONNECT-LISTENERS PIC X(1000).

PROCEDURE DIVISION USING LS-CONFIG, LS-METRICS, LS-TIME, LS-CREDENTIAL-PROVIDER, LS-API-VERSION-MANAGER, LS-SOCKET-FACTORY, LS-CONNECTION-DISCONNECT-LISTENERS.

    INITIALIZE WS-MAX-QUEUED-REQUESTS, WS-NODE-ID, WS-STOPPED, WS-MEMORY-POOL-SENSOR, WS-MEMORY-POOL, WS-DATA-PLANE-ACCEPTORS, WS-NEXT-PROCESSOR-ID, WS-CONNECTION-QUOTAS, WS-ALL-AUTHORIZER-FUTURES-COMPLETE.

    PERFORM CREATE-DATA-PLANE-ACCEPTORS.

    PERFORM ENABLE-REQUEST-PROCESSING.

    PERFORM STOP-PROCESSING-REQUESTS.

    PERFORM SHUTDOWN.

    STOP RUN.

CREATE-DATA-PLANE-ACCEPTORS.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-ACCEPTORS
        MOVE WS-ENDPOINT(I) TO ENDPOINT
        PERFORM CREATE-DATA-PLANE-ACCEPTOR-AND-PROCESSORS
    END-PERFORM.

CREATE-DATA-PLANE-ACCEPTOR-AND-PROCESSORS.
    INITIALIZE WS-ACCEPTOR.
    CALL "CONNECTIONQUOTAS" USING LS-CONFIG, ENDPOINT, WS-ACCEPTOR.
    CALL "DATAPLANEACCEPTOR" USING SELF, ENDPOINT, LS-CONFIG, WS-NODE-ID, WS-CONNECTION-QUOTAS, LS-TIME, LS-IS-PRIVILEGED-LISTENER, WS-REQUEST-CHANNEL, LS-METRICS, LS-CREDENTIAL-PROVIDER, LS-LOGCONTEXT, WS-MEMORY-POOL, LS-API-VERSION-MANAGER GIVING WS-ACCEPTOR.
    MOVE WS-ACCEPTOR TO WS-DATA-PLANE-ACCEPTORS(I).

ENABLE-REQUEST-PROCESSING.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-ACCEPTORS
        CALL "CHAINACCEPTORFUTURE" USING WS-DATA-PLANE-ACCEPTORS(I)
    END-PERFORM.
    CALL "COMPLETEFUTURE" USING WS-ALL-AUTHORIZER-FUTURES-COMPLETE.

STOP-PROCESSING-REQUESTS.
    IF NOT WS-STOPPED-FLAG
        MOVE 'Y' TO WS-STOPPED
        PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-ACCEPTORS
            CALL "BEGINSHUTDOWN" USING WS-DATA-PLANE-ACCEPTORS(I)
            CALL "CLOSE" USING WS-DATA-PLANE-ACCEPTORS(I)
        END-PERFORM.
        CALL "CLEAR" USING WS-REQUEST-CHANNEL.
    END-IF.

SHUTDOWN.
    CALL "COMPLETEEXCEPTIONALLY" USING WS-ALL-AUTHORIZER-FUTURES-COMPLETE, NEW EXCEPTION.
    IF WS-STOPPED-FLAG
        PERFORM STOP-PROCESSING-REQUESTS
        CALL "SHUTDOWN" USING WS-REQUEST-CHANNEL
        CALL "CLOSE" USING WS-CONNECTION-QUOTAS
    END-IF.

BOUND-PORT.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-ACCEPTORS
        IF WS-ENDPOINT(I) = LISTENER-NAME
            RETURN WS-ACCEPTOR(I)-LOCAL-PORT
        END-IF
    END-PERFORM.
    RAISE EXCEPTION.

ADD-LISTENERS.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-LISTENERS-ADDED
        MOVE WS-LISTENERS-ADDED(I) TO ENDPOINT
        PERFORM CREATE-DATA-PLANE-ACCEPTOR-AND-PROCESSORS
        CALL "START" USING WS-DATA-PLANE-ACCEPTORS(I)
        CALL "COMPLETEWHEN" USING WS-ALL-AUTHORIZER-FUTURES-COMPLETE, WS-DATA-PLANE-ACCEPTORS(I)-STARTED-FUTURE
    END-PERFORM.

REMOVE-LISTENERS.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-LISTENERS-REMOVED
        MOVE WS-LISTENERS-REMOVED(I) TO ENDPOINT
        CALL "REMOVELISTENER" USING LS-CONFIG, ENDPOINT-LISTENER-NAME
        CALL "BEGINSHUTDOWN" USING WS-DATA-PLANE-ACCEPTORS(I)
        CALL "CLOSE" USING WS-DATA-PLANE-ACCEPTORS(I)
        CALL "REMOVERECONFIGURABLE" USING LS-CONFIG, WS-DATA-PLANE-ACCEPTORS(I)
    END-PERFORM.

RECONFIGURE.
    CALL "UPDATEMAXCONNECTIONSPERIPOVERRIDE" USING WS-CONNECTION-QUOTAS, LS-CONFIG.
    CALL "UPDATEBROKERMAXCONNECTIONS" USING WS-CONNECTION-QUOTAS, LS-CONFIG.
    CALL "UPDATEBROKERMAXCONNECTIONRATE" USING WS-CONNECTION-QUOTAS, LS-CONFIG.

CONNECTION-COUNT.
    CALL "GET" USING WS-CONNECTION-QUOTAS, ADDRESS GIVING CONNECTION-COUNT.

DATA-PLANE-ACCEPTOR.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-ACCEPTORS
        IF WS-ENDPOINT-LISTENER-NAME(I) = LISTENER-NAME
            RETURN WS-DATA-PLANE-ACCEPTORS(I)
        END-IF
    END-PERFORM.
    RETURN SPACE.

IDENTIFICATION DIVISION.
PROGRAM-ID. DATA-PLANE-ACCEPTOR.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 WS-THREAD-PREFIX PIC X(10) VALUE 'data-plane'.
01 WS-METRIC-PREFIX PIC X(10) VALUE SPACE.
01 WS-LISTENER-RECONFIGURABLE-CONFIGS.
   05 OCCURS 1 TO 99 TIMES DEPENDING ON WS-NUM-CONFIGS.
      10 WS-CONFIG-NAME PIC X(50).
01 WS-OPEN-SERVER-SOCKET.
   05 WS-SOCKET-ADDRESS PIC X(50).
   05 WS-LOCAL-PORT PIC 9(5) VALUE 0.
01 WS-PROCESSORS.
   05 OCCURS 1 TO 99 TIMES DEPENDING ON WS-NUM-PROCESSORS.
      10 WS-PROCESSOR PIC X(50).
01 WS-CURRENT-PROCESSOR-INDEX PIC 9(9) VALUE 0.
01 WS-THROTTLED-SOCKETS.
   05 OCCURS 1 TO 99 TIMES DEPENDING ON WS-NUM-THROTTLED-SOCKETS.
      10 WS-SOCKET PIC X(50).
      10 WS-END-THROTTLE-TIME PIC 9(15) VALUE 0.
01 WS-STARTED PIC X VALUE 'N'.
    88 WS-STARTED-FLAG VALUE 'Y'.
01 WS-STARTED-FUTURE PIC X(1000).

LINKAGE SECTION.
01 LS-SOCKET-SERVER PIC X(1000).
01 LS-ENDPOINT PIC X(1000).
01 LS-CONFIG PIC X(1000).
01 LS-NODE-ID PIC 9(9).
01 LS-CONNECTION-QUOTAS PIC X(1000).
01 LS-TIME PIC X(1000).
01 LS-IS-PRIVILEGED-LISTENER PIC X.
01 LS-REQUEST-CHANNEL PIC X(1000).
01 LS-METRICS PIC X(1000).
01 LS-CREDENTIAL-PROVIDER PIC X(1000).
01 LS-LOGCONTEXT PIC X(1000).
01 LS-MEMORY-POOL PIC X(1000).
01 LS-API-VERSION-MANAGER PIC X(1000).

PROCEDURE DIVISION USING LS-SOCKET-SERVER, LS-ENDPOINT, LS-CONFIG, LS-NODE-ID, LS-CONNECTION-QUOTAS, LS-TIME, LS-IS-PRIVILEGED-LISTENER, LS-REQUEST-CHANNEL, LS-METRICS, LS-CREDENTIAL-PROVIDER, LS-LOGCONTEXT, LS-MEMORY-POOL, LS-API-VERSION-MANAGER.

    INITIALIZE WS-THREAD-PREFIX, WS-METRIC-PREFIX, WS-LISTENER-RECONFIGURABLE-CONFIGS, WS-OPEN-SERVER-SOCKET, WS-PROCESSORS, WS-CURRENT-PROCESSOR-INDEX, WS-THROTTLED-SOCKETS, WS-STARTED, WS-STARTED-FUTURE.

    PERFORM CONFIGURE.
    PERFORM ENABLE-REQUEST-PROCESSING.

CONFIGURE.
    CALL "GETNEXTPROCESSORID" USING LS-SOCKET-SERVER GIVING WS-NEXT-PROCESSOR-ID.
    CALL "NEWPROCESSOR" USING WS-NEXT-PROCESSOR-ID, LS-ENDPOINT-LISTENER-NAME, LS-ENDPOINT-SECURITY-PROTOCOL, LS-CONNECTION-DISCONNECT-LISTENERS GIVING WS-PROCESSOR.
    MOVE WS-PROCESSOR TO WS-PROCESSORS(WS-NUM-PROCESSORS).
    IF WS-STARTED-FLAG
        CALL "START" USING WS-PROCESSOR
    END-IF.

ENABLE-REQUEST-PROCESSING.
    IF WS-STARTED-FLAG
        CALL "START" USING SELF
    ELSE
        CALL "COMPLETEEXCEPTIONALLY" USING WS-STARTED-FUTURE, NEW EXCEPTION.
    END-IF.

OPEN-SERVER-SOCKET.
    CALL "OPENSERVERSOCKET" USING LS-ENDPOINT-LISTENER-NAME, LS-ENDPOINT-HOST, LS-ENDPOINT-PORT, LS-CONFIG-SOCKET-LISTEN-BACKLOG-SIZE, LS-CONFIG-SOCKET-RECEIVE-BUFFER-BYTES GIVING WS-SERVER-CHANNEL.
    MOVE WS-SERVER-CHANNEL-LOCAL-PORT TO WS-LOCAL-PORT.

START.
    CALL "REGISTER" USING WS-SERVER-CHANNEL, WS-SELECTOR, SELECTION-KEY-OP-ACCEPT.
    PERFORM UNTIL WS-STOPPED-FLAG
        PERFORM ACCEPT-NEW-CONNECTIONS
        PERFORM CLOSE-THROTTLED-CONNECTIONS
    END-PERFORM.
    CALL "CLOSEALL" USING SELF.

ACCEPT-NEW-CONNECTIONS.
    CALL "SELECT" USING WS-SELECTOR GIVING WS-READY.
    IF WS-READY > 0
        PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-READY
            CALL "NEXT" USING WS-SELECTOR-SELECTED-KEYS GIVING WS-KEY
            IF WS-KEY-IS-ACCEPTABLE
                CALL "ACCEPT" USING WS-KEY GIVING WS-SOCKET-CHANNEL
                PERFORM ASSIGN-NEW-CONNECTION
            END-IF
        END-PERFORM.
    END-IF.

ASSIGN-NEW-CONNECTION.
    PERFORM UNTIL WS-SOCKET-CHANNEL-ASSIGNED
        CALL "GETPROCESSOR" USING WS-CURRENT-PROCESSOR-INDEX, WS-PROCESSORS GIVING WS-PROCESSOR
        CALL "INCREMENT" USING WS-CURRENT-PROCESSOR-INDEX
        CALL "ACCEPT" USING WS-SOCKET-CHANNEL, WS-PROCESSOR, WS-ACCEPTOR-BLOCKED-PERCENT-METER GIVING WS-SOCKET-CHANNEL-ASSIGNED
    END-PERFORM.

CLOSE-THROTTLED-CONNECTIONS.
    PERFORM UNTIL WS-NUM-THROTTLED-SOCKETS = 0 OR WS-THROTTLED-SOCKETS(1)-END-THROTTLE-TIME > WS-TIME-MILLISECONDS
        CALL "CLOSE" USING WS-THROTTLED-SOCKETS(1)-SOCKET
        PERFORM VARYING I FROM 1 BY 1 UNTIL I >= WS-NUM-THROTTLED-SOCKETS
            MOVE WS-THROTTLED-SOCKETS(I+1) TO WS-THROTTLED-SOCKETS(I)
        END-PERFORM
        SUBTRACT 1 FROM WS-NUM-THROTTLED-SOCKETS
    END-PERFORM.

REMOVE-PROCESSORS.
    PERFORM VARYING I FROM WS-NUM-PROCESSORS - WS-PROCESSORS-TO-REMOVE + 1 BY 1 UNTIL I > WS-NUM-PROCESSORS
        MOVE WS-PROCESSORS(I) TO WS-PROCESSOR
        CALL "CLOSE" USING WS-PROCESSOR
        CALL "REMOVEPROCESSOR" USING LS-REQUEST-CHANNEL, WS-PROCESSOR-ID
    END-PERFORM.
    SUBTRACT WS-PROCESSORS-TO-REMOVE FROM WS-NUM-PROCESSORS.

BEGIN-SHUTDOWN.
    IF NOT WS-STOPPED-FLAG
        MOVE 'Y' TO WS-STOPPED
        CALL "WAKEUP" USING WS-SELECTOR
        PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-PROCESSORS
            CALL "BEGINSHUTDOWN" USING WS-PROCESSORS(I)
        END-PERFORM.
    END-IF.

CLOSE.
    PERFORM BEGIN-SHUTDOWN.
    CALL "JOIN" USING WS-THREAD.
    IF NOT WS-STARTED-FLAG
        CALL "CLOSEALL" USING SELF
    END-IF.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-NUM-PROCESSORS
        CALL "CLOSE" USING W